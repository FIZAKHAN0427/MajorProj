{"file_contents":{"README.md":{"content":"# FasalNeeti - Smart Farming Solutions\n\n**Slogan:** \"FasalNeeti: Apni Mitti, Apna Data, Apna Bhavishya\"\n\nA React.js frontend application designed for Indian farmers, providing AI-powered agricultural insights, crop yield predictions, and stress detection alerts.\n\n## üåæ Features\n\n### For Farmers\n- **Crop Yield Prediction**: Multi-modal data analysis using soil, weather, and historical data\n- **Stress Detection Alerts**: Real-time monitoring for drought, heat stress, and pest detection\n- **Interactive Dashboard**: Comprehensive analytics with charts and weather data\n- **Fertilizer Recommendations**: AI-powered advice for optimal fertilizer usage\n- **Weather Integration**: 5-day weather forecast and current conditions\n\n### For Admins\n- **Farmer Management**: View, edit, and manage registered farmers\n- **Regional Analytics**: Aggregated yield trends and stress alerts by region\n- **Downloadable Reports**: Export data for analysis and reporting\n- **System Monitoring**: Real-time statistics and performance metrics\n\n## üé® Design Features\n\n- **Warm Earthy Colors**: Indian-inspired color palette with earth, crop, and soil tones\n- **Light/Dark Theme**: Toggle between light and dark modes\n- **Responsive Design**: Optimized for desktop and mobile devices\n- **Hindi-English Support**: Bilingual interface for better accessibility\n- **Crop Icons & Motifs**: Subtle desi design elements throughout\n\n## üöÄ Getting Started\n\n### Prerequisites\n- Node.js (v14 or higher)\n- npm or yarn package manager\n\n### Installation\n\n1. **Clone or navigate to the project directory:**\n   ```bash\n   cd c:\\Users\\nehas\\Desktop\\majorproj\n   ```\n\n2. **Install dependencies:**\n   ```bash\n   npm install\n   ```\n\n3. **Start the development server:**\n   ```bash\n   npm start\n   ```\n\n4. **Open your browser and visit:**\n   ```\n   http://localhost:3000\n   ```\n\n## üì± Usage\n\n### Farmer Registration & Login\n1. Click \"Farmer Login\" on the homepage\n2. Fill in your farming details:\n   - Personal information (name, location, mobile)\n   - Farming information (soil type, last crop, irrigation type)\n   - Optional: Upload sensor data or crop images\n3. Access your personalized dashboard with:\n   - Yield prediction charts\n   - Stress detection alerts\n   - Weather forecasts\n   - Fertilizer recommendations\n\n### Admin Access\n1. Click \"Admin Login\" on the homepage\n2. Use demo credentials:\n   - **Username:** admin\n   - **Password:** admin123\n3. Access admin dashboard with:\n   - Farmer management tools\n   - Regional analytics\n   - Report generation\n   - System statistics\n\n## üõ†Ô∏è Technology Stack\n\n- **Frontend Framework:** React.js 18\n- **Styling:** Tailwind CSS\n- **Charts:** Recharts library\n- **Routing:** React Router DOM\n- **State Management:** React Context API\n- **Icons & Fonts:** Google Fonts (Pacifico, Inter)\n\n## üìä Mock Data\n\nThe application uses comprehensive mock data including:\n- Sample farmer profiles from different Indian states\n- Yield prediction data with monthly trends\n- Weather information and forecasts\n- Stress detection analytics\n- Regional farming statistics\n- Fertilizer recommendations\n\n## üéØ Key Components\n\n### Pages\n- **Homepage**: Hero section, features, call-to-action\n- **Farmer Login**: Registration form with validation\n- **Farmer Dashboard**: Charts, weather, recommendations\n- **Admin Login**: Simple authentication\n- **Admin Dashboard**: Management and analytics\n- **About**: Platform information and team details\n\n### Components\n- **Navbar**: Responsive navigation with theme toggle\n- **ThemeContext**: Light/dark mode management\n- **Charts**: Interactive data visualizations\n\n## üåü Special Features\n\n### Farmer-Friendly Design\n- Large, clear buttons and text\n- Intuitive navigation\n- Hindi translations for key terms\n- Visual icons for better understanding\n- Empty states with helpful messages\n\n### Data Visualization\n- Line charts for yield predictions\n- Pie charts for stress detection\n- Bar charts for regional analytics\n- Weather widgets with forecasts\n- Interactive tooltips and legends\n\n### Responsive Layout\n- Mobile-first design approach\n- Flexible grid layouts\n- Touch-friendly interface\n- Optimized for various screen sizes\n\n## üîÆ Future Enhancements\n\n### API Integration Ready\n- Placeholder functions for REST API calls\n- Authentication system structure\n- Data fetching patterns established\n- Error handling frameworks in place\n\n### Potential Integrations\n- Real weather API services\n- Satellite imagery providers\n- IoT sensor data streams\n- Government agricultural databases\n- Payment gateway for premium features\n\n## üìù Development Notes\n\n### Code Structure\n- Clean, commented code for easy maintenance\n- Modular component architecture\n- Consistent naming conventions\n- Reusable utility functions\n\n### Performance Optimizations\n- Lazy loading for large components\n- Optimized image handling\n- Efficient state management\n- Minimal bundle size\n\n## ü§ù Contributing\n\nThis is a demo application showcasing modern React development practices for agricultural technology. The codebase is well-documented and structured for easy modification and extension.\n\n## üìû Support\n\nFor technical support or questions:\n- **Email**: support@fasalneeti.com\n- **Phone**: 1800-123-456 (Toll Free)\n- **Admin Support**: admin@fasalneeti.com\n\n---\n\n**Built with ‚ù§Ô∏è for Indian Farmers**\n\n*Empowering agriculture through technology - \"‡§Ö‡§™‡§®‡•Ä ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä, ‡§Ö‡§™‡§®‡§æ ‡§°‡•á‡§ü‡§æ, ‡§Ö‡§™‡§®‡§æ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø\"*\n# MajorProj\n","size_bytes":5470},"postcss.config.js":{"content":"module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":82},"tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./src/**/*.{js,jsx,ts,tsx}\",\n  ],\n  darkMode: 'class',\n  theme: {\n    extend: {\n      colors: {\n        // Professional Green Theme for Agriculture\n        primary: {\n          50: '#f0fdf4',\n          100: '#dcfce7',\n          200: '#bbf7d0',\n          300: '#86efac',\n          400: '#4ade80',\n          500: '#22c55e',\n          600: '#16a34a',\n          700: '#15803d',\n          800: '#166534',\n          900: '#14532d',\n        },\n        secondary: {\n          50: '#f9fafb',\n          100: '#f3f4f6',\n          200: '#e5e7eb',\n          300: '#d1d5db',\n          400: '#9ca3af',\n          500: '#6b7280',\n          600: '#4b5563',\n          700: '#374151',\n          800: '#1f2937',\n          900: '#111827',\n        },\n        accent: {\n          50: '#ecfdf5',\n          100: '#d1fae5',\n          200: '#a7f3d0',\n          300: '#6ee7b7',\n          400: '#34d399',\n          500: '#10b981',\n          600: '#059669',\n          700: '#047857',\n          800: '#065f46',\n          900: '#064e3b',\n        }\n      },\n      fontFamily: {\n        'sans': ['Inter', 'system-ui', 'sans-serif'],\n      },\n      animation: {\n        'fade-in': 'fadeIn 0.6s ease-in-out',\n        'slide-up': 'slideUp 0.8s ease-out',\n      },\n      keyframes: {\n        fadeIn: {\n          '0%': { opacity: '0', transform: 'translateY(20px)' },\n          '100%': { opacity: '1', transform: 'translateY(0)' },\n        },\n        slideUp: {\n          '0%': { opacity: '0', transform: 'translateY(30px)' },\n          '100%': { opacity: '1', transform: 'translateY(0)' },\n        }\n      },\n      boxShadow: {\n        '3xl': '0 35px 60px -12px rgba(0, 0, 0, 0.25)',\n        '4xl': '0 45px 100px -12px rgba(0, 0, 0, 0.25)',\n      },\n    },\n  },\n  plugins: [],\n}\n","size_bytes":1821},"src/App.js":{"content":"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ThemeProvider } from './contexts/ThemeContext';\n\n// Import components\nimport Navbar from './components/Navbar';\n\n// Import pages\nimport Homepage from './pages/Homepage';\nimport FarmerLogin from './pages/FarmerLogin';\nimport FarmerDashboard from './pages/FarmerDashboard';\nimport AdminLogin from './pages/AdminLogin';\nimport AdminDashboard from './pages/AdminDashboard';\n\n/**\n * Main App Component\n * Handles routing and theme context for the entire application\n */\nfunction App() {\n  return (\n    <ThemeProvider>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Routes>\n            {/* Public Routes */}\n            <Route path=\"/\" element={<Homepage />} />\n            <Route path=\"/login\" element={<FarmerLogin />} /> {/* Default login redirects to farmer login */}\n            \n            {/* Farmer Routes */}\n            <Route path=\"/farmer-login\" element={<FarmerLogin />} />\n            <Route path=\"/farmer-dashboard\" element={<FarmerDashboard />} />\n            \n            {/* Admin Routes */}\n            <Route path=\"/admin-login\" element={<AdminLogin />} />\n            <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n            \n            {/* Fallback Route - Redirect to Homepage */}\n            <Route path=\"*\" element={<Homepage />} />\n          </Routes>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1513},"src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Professional FasalNeeti Styles */\n@layer base {\n  html {\n    font-family: 'Inter', system-ui, sans-serif;\n  }\n  \n  body {\n    @apply bg-gradient-to-br from-primary-50 to-accent-50 dark:from-secondary-900 dark:to-secondary-800 transition-colors duration-300;\n  }\n}\n\n@layer components {\n  .btn-primary {\n    @apply bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white font-bold py-4 px-8 rounded-xl shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-1 hover:scale-105 focus:outline-none focus:ring-4 focus:ring-primary-500/50 focus:ring-offset-2 relative overflow-hidden;\n  }\n  \n  .btn-secondary {\n    @apply bg-gradient-to-r from-accent-600 to-accent-700 hover:from-accent-700 hover:to-accent-800 text-white font-bold py-4 px-8 rounded-xl shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-1 hover:scale-105 focus:outline-none focus:ring-4 focus:ring-accent-500/50 focus:ring-offset-2 relative overflow-hidden;\n  }\n  \n  .btn-outline {\n    @apply border-2 border-primary-600 text-primary-600 hover:bg-primary-600 hover:text-white font-bold py-4 px-8 rounded-xl transition-all duration-500 focus:outline-none focus:ring-4 focus:ring-primary-500/50 focus:ring-offset-2 shadow-lg hover:shadow-2xl transform hover:-translate-y-1 hover:scale-105;\n  }\n  \n  .card {\n    @apply bg-white/95 dark:bg-secondary-800/95 rounded-2xl shadow-2xl hover:shadow-3xl transition-all duration-500 border border-primary-200/50 dark:border-secondary-700/50 backdrop-blur-xl hover:-translate-y-2 hover:scale-[1.02] relative overflow-hidden;\n  }\n  \n  .card::before {\n    content: '';\n    @apply absolute inset-0 bg-gradient-to-br from-primary-500/5 to-accent-500/5 opacity-0 hover:opacity-100 transition-opacity duration-500;\n  }\n  \n  .input-field {\n    @apply w-full px-6 py-4 border-2 border-secondary-300 dark:border-secondary-600 rounded-xl focus:ring-4 focus:ring-primary-500/30 focus:border-primary-500 bg-white/90 dark:bg-secondary-700/90 text-secondary-900 dark:text-white placeholder-secondary-500 dark:placeholder-secondary-400 transition-all duration-300 shadow-lg focus:shadow-xl backdrop-blur-sm;\n  }\n  \n  .nav-link {\n    @apply text-secondary-700 dark:text-secondary-300 hover:text-primary-600 dark:hover:text-primary-400 font-semibold transition-all duration-300 px-4 py-2 rounded-xl hover:bg-primary-50 dark:hover:bg-primary-900/20 hover:shadow-lg transform hover:-translate-y-0.5;\n  }\n  \n  .hero-gradient {\n    @apply bg-gradient-to-br from-primary-100 via-accent-50 to-primary-50 dark:from-secondary-800 dark:via-secondary-900 dark:to-secondary-800;\n  }\n  \n  .section-title {\n    @apply text-4xl md:text-5xl font-black text-secondary-900 dark:text-white mb-8 bg-gradient-to-r from-primary-600 to-accent-600 bg-clip-text text-transparent;\n  }\n  \n  .section-subtitle {\n    @apply text-xl text-secondary-600 dark:text-secondary-400 mb-12 leading-relaxed;\n  }\n  \n  .stat-card {\n    @apply bg-white/90 dark:bg-secondary-800/90 rounded-2xl p-8 text-center shadow-2xl border border-primary-200/50 dark:border-secondary-700/50 backdrop-blur-xl hover:shadow-3xl transition-all duration-500 hover:-translate-y-2 hover:scale-105 relative overflow-hidden;\n  }\n  \n  .stat-card::before {\n    content: '';\n    @apply absolute inset-0 bg-gradient-to-br from-primary-500/10 to-accent-500/10 opacity-0 hover:opacity-100 transition-opacity duration-500;\n  }\n  \n  .alert-success {\n    @apply bg-primary-50/90 dark:bg-primary-900/30 border-2 border-primary-300 dark:border-primary-700 text-primary-800 dark:text-primary-200 rounded-xl p-6 shadow-lg backdrop-blur-sm;\n  }\n  \n  .alert-warning {\n    @apply bg-yellow-50/90 dark:bg-yellow-900/30 border-2 border-yellow-300 dark:border-yellow-700 text-yellow-800 dark:text-yellow-200 rounded-xl p-6 shadow-lg backdrop-blur-sm;\n  }\n  \n  .alert-error {\n    @apply bg-red-50/90 dark:bg-red-900/30 border-2 border-red-300 dark:border-red-700 text-red-800 dark:text-red-200 rounded-xl p-6 shadow-lg backdrop-blur-sm;\n  }\n  \n  .dashboard-card {\n    @apply bg-white/95 dark:bg-secondary-800/95 rounded-2xl p-8 shadow-2xl border border-primary-200/50 dark:border-secondary-700/50 backdrop-blur-xl hover:shadow-3xl transition-all duration-500 hover:-translate-y-1 relative overflow-hidden;\n  }\n  \n  .dashboard-card::before {\n    content: '';\n    @apply absolute inset-0 bg-gradient-to-br from-primary-500/5 to-accent-500/5 opacity-0 hover:opacity-100 transition-opacity duration-500;\n  }\n  \n  .form-container {\n    @apply bg-white/95 dark:bg-secondary-800/95 rounded-3xl p-10 shadow-3xl border border-primary-200/50 dark:border-secondary-700/50 backdrop-blur-xl relative overflow-hidden;\n  }\n  \n  .form-container::before {\n    content: '';\n    @apply absolute inset-0 bg-gradient-to-br from-primary-500/5 to-accent-500/5;\n  }\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  @apply bg-primary-100 dark:bg-secondary-800;\n}\n\n::-webkit-scrollbar-thumb {\n  @apply bg-primary-400 dark:bg-secondary-600 rounded-full;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  @apply bg-primary-500 dark:bg-secondary-500;\n}\n\n/* Spectacular Professional Animations */\n.animate-fade-in {\n  animation: fadeIn 0.8s ease-out;\n}\n\n.animate-slide-up {\n  animation: slideUp 1s ease-out;\n}\n\n.animate-scale-in {\n  animation: scaleIn 0.6s ease-out;\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n.animate-float-delayed {\n  animation: float 8s ease-in-out infinite;\n  animation-delay: -2s;\n}\n\n.animate-gradient-x {\n  animation: gradient-x 15s ease infinite;\n  background-size: 400% 400%;\n}\n\n/* Advanced Keyframes */\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n    transform: translateY(30px) scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes slideUp {\n  0% {\n    opacity: 0;\n    transform: translateY(50px) scale(0.9);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes scaleIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.8) rotate(-5deg);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1) rotate(0deg);\n  }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px) rotate(0deg);\n  }\n  33% {\n    transform: translateY(-15px) rotate(1deg);\n  }\n  66% {\n    transform: translateY(-25px) rotate(-1deg);\n  }\n}\n\n@keyframes gradient-x {\n  0%, 100% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n@keyframes pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 20px rgba(34, 197, 94, 0.3);\n  }\n  50% {\n    box-shadow: 0 0 40px rgba(34, 197, 94, 0.6);\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    background-position: -200% center;\n  }\n  100% {\n    background-position: 200% center;\n  }\n}\n\n/* Enhanced Shadow Effects */\n.shadow-3xl {\n  box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);\n}\n\n.shadow-4xl {\n  box-shadow: 0 50px 100px -20px rgba(0, 0, 0, 0.25);\n}\n\n/* Glass Morphism Effects */\n.glass {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.glass-dark {\n  background: rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* Loading spinner */\n.spinner {\n  @apply animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600;\n}\n\n/* Hover Effects */\n.hover-glow:hover {\n  box-shadow: 0 0 30px rgba(34, 197, 94, 0.4);\n}\n\n.hover-lift:hover {\n  transform: translateY(-8px) scale(1.02);\n}\n\n/* Responsive Text Shadows */\n.text-shadow-lg {\n  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n}\n\n.text-shadow-xl {\n  text-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);\n}\n","size_bytes":7705},"src/index.js":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n// Create root element and render the app\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","size_bytes":296},"src/components/Navbar.js":{"content":"import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useTheme } from '../contexts/ThemeContext';\n\n/**\n * Professional Navigation component with clean design\n * Features: Logo, navigation links, theme switcher, mobile menu\n */\nconst Navbar = () => {\n  const { theme, toggleTheme } = useTheme();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const location = useLocation();\n\n  // Navigation items configuration\n  const navItems = [\n    { name: 'Home', path: '/' },\n    { name: 'Login', path: '/login' }\n  ];\n\n  // Check if current path is active\n  const isActivePath = (path) => {\n    return location.pathname === path;\n  };\n\n  return (\n    <nav className=\"bg-white/95 dark:bg-secondary-900/95 backdrop-blur-md shadow-lg sticky top-0 z-50 transition-all duration-300 border-b border-primary-100 dark:border-secondary-700\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-24\">\n          \n          {/* Logo Section */}\n          <Link to=\"/\" className=\"flex items-center space-x-4 group\">\n            <div className=\"w-14 h-14 bg-gradient-to-br from-primary-600 to-accent-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300 shadow-xl\">\n              <div className=\"w-10 h-10 bg-white rounded-lg flex items-center justify-center\">\n                <div className=\"w-5 h-5 bg-primary-600 rounded-full\"></div>\n              </div>\n            </div>\n            <div className=\"hidden sm:block\">\n              <h1 className=\"text-lg font-bold text-secondary-900 dark:text-white\">\n                FasalNeeti\n              </h1>\n              <p className=\"text-xs text-secondary-600 dark:text-secondary-400 -mt-1\">\n                Smart Agriculture Solutions\n              </p>\n            </div>\n          </Link>\n\n          {/* Right Side - Navigation & Theme Toggle */}\n          <div className=\"flex items-center space-x-6\">\n            \n            {/* Desktop Navigation */}\n            <div className=\"hidden md:flex items-center space-x-1\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.path}\n                  className={`nav-link px-4 py-2 rounded-lg transition-all duration-200 font-medium ${\n                    isActivePath(item.path)\n                      ? 'bg-primary-100 dark:bg-primary-900/20 text-primary-700 dark:text-primary-400'\n                      : 'hover:bg-primary-50 dark:hover:bg-secondary-800'\n                  }`}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n\n            {/* Theme Toggle Button */}\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 rounded-lg bg-primary-100 dark:bg-secondary-700 hover:bg-primary-200 dark:hover:bg-secondary-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              aria-label=\"Toggle theme\"\n            >\n              {theme === 'light' ? (\n                <svg className=\"w-5 h-5 text-secondary-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n                </svg>\n              ) : (\n                <svg className=\"w-5 h-5 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                </svg>\n              )}\n            </button>\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"md:hidden p-2 rounded-lg bg-primary-100 dark:bg-secondary-700 hover:bg-primary-200 dark:hover:bg-secondary-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-500\"\n              aria-label=\"Toggle mobile menu\"\n            >\n              {isMobileMenuOpen ? (\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              ) : (\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden py-4 border-t border-primary-200 dark:border-secondary-700 animate-fade-in\">\n            <div className=\"flex flex-col space-y-1\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.path}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className={`nav-link px-4 py-3 rounded-lg transition-all duration-200 font-medium ${\n                    isActivePath(item.path)\n                      ? 'bg-primary-100 dark:bg-primary-900/20 text-primary-700 dark:text-primary-400'\n                      : 'hover:bg-primary-50 dark:hover:bg-secondary-800'\n                  }`}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","size_bytes":5853},"src/contexts/ThemeContext.js":{"content":"import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create Theme Context\nconst ThemeContext = createContext();\n\n// Custom hook to use theme context\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Theme Provider Component\nexport const ThemeProvider = ({ children }) => {\n  // Initialize theme from localStorage or default to 'light'\n  const [theme, setTheme] = useState(() => {\n    const savedTheme = localStorage.getItem('fasalneeti-theme');\n    return savedTheme || 'light';\n  });\n\n  // Toggle between light and dark themes\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('fasalneeti-theme', newTheme);\n  };\n\n  // Apply theme class to document root\n  useEffect(() => {\n    const root = document.documentElement;\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n  }, [theme]);\n\n  const value = {\n    theme,\n    toggleTheme,\n    isDark: theme === 'dark'\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","size_bytes":1300},"src/data/mockData.js":{"content":"// Mock data for FasalNeeti application\n\n// Sample farmer data\nexport const mockFarmers = [\n  {\n    id: 1,\n    name: \"‡§∞‡§æ‡§Æ ‡§ï‡•Å‡§Æ‡§æ‡§∞ ‡§∂‡§∞‡•ç‡§Æ‡§æ\",\n    location: \"‡§™‡§Ç‡§ú‡§æ‡§¨, ‡§≤‡•Å‡§ß‡§ø‡§Ø‡§æ‡§®‡§æ\",\n    mobile: \"+91 98765 43210\",\n    fertilizerUsage: \"Organic + NPK\",\n    soilType: \"Alluvial\",\n    soilPH: 6.8,\n    lastCrop: \"‡§ó‡•á‡§π‡•Ç‡§Ç (Wheat)\",\n    irrigationType: \"Drip Irrigation\",\n    pesticidesUsed: \"Neem-based organic\",\n    registrationDate: \"2024-01-15\"\n  },\n  {\n    id: 2,\n    name: \"‡§∏‡•Å‡§®‡•Ä‡§§‡§æ ‡§¶‡•á‡§µ‡•Ä\",\n    location: \"‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂, ‡§Æ‡•á‡§∞‡§†\",\n    mobile: \"+91 87654 32109\",\n    fertilizerUsage: \"DAP + Urea\",\n    soilType: \"Clay Loam\",\n    soilPH: 7.2,\n    lastCrop: \"‡§ß‡§æ‡§® (Rice)\",\n    irrigationType: \"Flood Irrigation\",\n    pesticidesUsed: \"Minimal chemical\",\n    registrationDate: \"2024-02-20\"\n  },\n  {\n    id: 3,\n    name: \"‡§Ö‡§ú‡§Ø ‡§™‡§ü‡•á‡§≤\",\n    location: \"‡§ó‡•Å‡§ú‡§∞‡§æ‡§§, ‡§Ö‡§π‡§Æ‡§¶‡§æ‡§¨‡§æ‡§¶\",\n    mobile: \"+91 76543 21098\",\n    fertilizerUsage: \"Vermicompost\",\n    soilType: \"Sandy Loam\",\n    soilPH: 6.5,\n    lastCrop: \"‡§ï‡§™‡§æ‡§∏ (Cotton)\",\n    irrigationType: \"Sprinkler\",\n    pesticidesUsed: \"Integrated Pest Management\",\n    registrationDate: \"2024-03-10\"\n  }\n];\n\n// Yield prediction data for charts\nexport const yieldPredictionData = [\n  { month: 'Jan', predicted: 45, actual: 42, optimal: 50 },\n  { month: 'Feb', predicted: 52, actual: 48, optimal: 55 },\n  { month: 'Mar', predicted: 48, actual: 51, optimal: 52 },\n  { month: 'Apr', predicted: 61, actual: 58, optimal: 65 },\n  { month: 'May', predicted: 55, actual: 52, optimal: 60 },\n  { month: 'Jun', predicted: 67, actual: 65, optimal: 70 },\n  { month: 'Jul', predicted: 72, actual: 69, optimal: 75 },\n  { month: 'Aug', predicted: 68, actual: 71, optimal: 72 },\n  { month: 'Sep', predicted: 63, actual: 60, optimal: 68 },\n  { month: 'Oct', predicted: 58, actual: 55, optimal: 62 },\n  { month: 'Nov', predicted: 52, actual: 49, optimal: 56 },\n  { month: 'Dec', predicted: 47, actual: 44, optimal: 51 }\n];\n\n// Stress detection data for pie chart\nexport const stressDetectionData = [\n  { name: '‡§∏‡•ç‡§µ‡§∏‡•ç‡§• (Healthy)', value: 65, color: '#22c55e' },\n  { name: '‡§∏‡•Ç‡§ñ‡§æ (Drought)', value: 20, color: '#f59e0b' },\n  { name: '‡§ó‡§∞‡•ç‡§Æ‡•Ä (Heat Stress)', value: 10, color: '#ef4444' },\n  { name: '‡§ï‡•Ä‡§ü (Pest)', value: 5, color: '#8b5cf6' }\n];\n\n// Weather data\nexport const weatherData = {\n  current: {\n    temperature: 28,\n    humidity: 65,\n    rainfall: 12.5,\n    windSpeed: 8.2,\n    uvIndex: 6,\n    soilMoisture: 45\n  },\n  forecast: [\n    { day: '‡§Ü‡§ú', temp: 28, condition: 'Partly Cloudy', icon: '‚õÖ' },\n    { day: '‡§ï‡§≤', temp: 30, condition: 'Sunny', icon: '‚òÄÔ∏è' },\n    { day: '‡§™‡§∞‡§∏‡•ã‡§Ç', temp: 26, condition: 'Rainy', icon: 'üåßÔ∏è' },\n    { day: '‡§∂‡•Å‡§ï‡•ç‡§∞‡§µ‡§æ‡§∞', temp: 29, condition: 'Cloudy', icon: '‚òÅÔ∏è' },\n    { day: '‡§∂‡§®‡§ø‡§µ‡§æ‡§∞', temp: 31, condition: 'Hot', icon: 'üå°Ô∏è' }\n  ]\n};\n\n// Fertilizer recommendations\nexport const fertilizerRecommendations = [\n  {\n    type: \"‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§® (Nitrogen)\",\n    recommended: \"120 kg/hectare\",\n    current: \"100 kg/hectare\",\n    status: \"increase\",\n    advice: \"‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§® ‡§¨‡§¢‡§º‡§æ‡§è‡§Ç\"\n  },\n  {\n    type: \"‡§´‡§æ‡§∏‡•ç‡§´‡•ã‡§∞‡§∏ (Phosphorus)\",\n    recommended: \"60 kg/hectare\",\n    current: \"65 kg/hectare\",\n    status: \"optimal\",\n    advice: \"‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§π‡•à\"\n  },\n  {\n    type: \"‡§™‡•ã‡§ü‡§æ‡§∂ (Potash)\",\n    recommended: \"40 kg/hectare\",\n    current: \"50 kg/hectare\",\n    status: \"decrease\",\n    advice: \"‡§™‡•ã‡§ü‡§æ‡§∂ ‡§ï‡•Ä ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§Æ ‡§ï‡§∞‡•á‡§Ç\"\n  }\n];\n\n// Regional analytics for admin dashboard\nexport const regionalAnalytics = [\n  { region: '‡§™‡§Ç‡§ú‡§æ‡§¨', farmers: 1250, avgYield: 68, stressAlerts: 45 },\n  { region: '‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂', farmers: 2100, avgYield: 62, stressAlerts: 78 },\n  { region: '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§', farmers: 890, avgYield: 71, stressAlerts: 32 },\n  { region: '‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞', farmers: 1680, avgYield: 65, stressAlerts: 56 },\n  { region: '‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§®', farmers: 750, avgYield: 58, stressAlerts: 89 },\n  { region: '‡§π‡§∞‡§ø‡§Ø‡§æ‡§£‡§æ', farmers: 920, avgYield: 69, stressAlerts: 41 }\n];\n\n// Sample alerts for farmers\nexport const sampleAlerts = [\n  {\n    id: 1,\n    type: 'warning',\n    icon: '‚ö†Ô∏è',\n    message: '‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§Æ‡•á‡§Ç ‡§®‡§Æ‡•Ä ‡§ï‡§Æ ‡§π‡•à - ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ',\n    timestamp: '2 ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á',\n    priority: 'high'\n  },\n  {\n    id: 2,\n    type: 'info',\n    icon: 'üå°Ô∏è',\n    message: '‡§Ö‡§ó‡§≤‡•á 3 ‡§¶‡§ø‡§® ‡§§‡§æ‡§™‡§Æ‡§æ‡§® 35¬∞C ‡§∏‡•á ‡§ä‡§™‡§∞ ‡§∞‡§π‡•á‡§ó‡§æ',\n    timestamp: '4 ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á',\n    priority: 'medium'\n  },\n  {\n    id: 3,\n    type: 'success',\n    icon: '‚úÖ',\n    message: '‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§π‡•à',\n    timestamp: '1 ‡§¶‡§ø‡§® ‡§™‡§π‡§≤‡•á',\n    priority: 'low'\n  },\n  {\n    id: 4,\n    type: 'warning',\n    icon: 'üêõ',\n    message: '‡§ï‡•Ä‡§ü ‡§™‡•ç‡§∞‡§ï‡•ã‡§™ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ - ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§∞‡§ñ‡•á‡§Ç',\n    timestamp: '2 ‡§¶‡§ø‡§® ‡§™‡§π‡§≤‡•á',\n    priority: 'high'\n  }\n];\n\n// Crop types with icons\nexport const cropTypes = [\n  { name: '‡§ó‡•á‡§π‡•Ç‡§Ç', icon: 'üåæ', season: '‡§∞‡§¨‡•Ä' },\n  { name: '‡§ß‡§æ‡§®', icon: 'üåæ', season: '‡§ñ‡§∞‡•Ä‡§´' },\n  { name: '‡§Æ‡§ï‡•ç‡§ï‡§æ', icon: 'üåΩ', season: '‡§ñ‡§∞‡•Ä‡§´' },\n  { name: '‡§ï‡§™‡§æ‡§∏', icon: 'üåø', season: '‡§ñ‡§∞‡•Ä‡§´' },\n  { name: '‡§ó‡§®‡•ç‡§®‡§æ', icon: 'üéã', season: '‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï' },\n  { name: '‡§∏‡§∞‡§∏‡•ã‡§Ç', icon: 'üåª', season: '‡§∞‡§¨‡•Ä' },\n  { name: '‡§ö‡§®‡§æ', icon: 'ü´ò', season: '‡§∞‡§¨‡•Ä' },\n  { name: '‡§∏‡•ã‡§Ø‡§æ‡§¨‡•Ä‡§®', icon: 'ü´ò', season: '‡§ñ‡§∞‡•Ä‡§´' }\n];\n\n// Soil types\nexport const soilTypes = [\n  'Alluvial (‡§ú‡§≤‡•ã‡§¢‡§º)',\n  'Black (‡§ï‡§æ‡§≤‡•Ä ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä)',\n  'Red (‡§≤‡§æ‡§≤ ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä)',\n  'Laterite (‡§≤‡•à‡§ü‡•á‡§∞‡§æ‡§á‡§ü)',\n  'Desert (‡§∞‡•á‡§ó‡§ø‡§∏‡•ç‡§§‡§æ‡§®‡•Ä)',\n  'Mountain (‡§™‡§∞‡•ç‡§µ‡§§‡•Ä‡§Ø)',\n  'Clay Loam (‡§ö‡§ø‡§ï‡§®‡•Ä ‡§¶‡•ã‡§Æ‡§ü)',\n  'Sandy Loam (‡§¨‡§≤‡•Å‡§à ‡§¶‡•ã‡§Æ‡§ü)'\n];\n\n// Irrigation types\nexport const irrigationTypes = [\n  'Drip Irrigation (‡§°‡•ç‡§∞‡§ø‡§™)',\n  'Sprinkler (‡§∏‡•ç‡§™‡•ç‡§∞‡§ø‡§Ç‡§ï‡§≤‡§∞)',\n  'Flood Irrigation (‡§¨‡§æ‡§¢‡§º ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à)',\n  'Furrow Irrigation (‡§ï‡•Ç‡§Ç‡§° ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à)',\n  'Rain Fed (‡§µ‡§∞‡•ç‡§∑‡§æ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§)',\n  'Tube Well (‡§®‡§≤‡§ï‡•Ç‡§™)',\n  'Canal (‡§®‡§π‡§∞)',\n  'Tank Irrigation (‡§§‡§æ‡§≤‡§æ‡§¨)'\n];\n","size_bytes":6756},"src/pages/AdminDashboard.js":{"content":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { mockFarmers, regionalAnalytics, stressDetectionData } from '../data/mockData';\n\n/**\n * Admin Dashboard Component\n * Features: Farmer management, analytics, reports, regional data\n */\nconst AdminDashboard = () => {\n  const navigate = useNavigate();\n  const [adminData, setAdminData] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [farmers, setFarmers] = useState(mockFarmers);\n  const [selectedFarmer, setSelectedFarmer] = useState(null);\n  const [showFarmerModal, setShowFarmerModal] = useState(false);\n\n  // Load admin data on component mount\n  useEffect(() => {\n    const userData = localStorage.getItem('adminData');\n    const userType = localStorage.getItem('userType');\n    \n    if (!userData || userType !== 'admin') {\n      navigate('/admin-login');\n      return;\n    }\n    \n    setAdminData(JSON.parse(userData));\n  }, [navigate]);\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('adminData');\n    localStorage.removeItem('userType');\n    navigate('/');\n  };\n\n  // Handle farmer deletion\n  const handleDeleteFarmer = (farmerId) => {\n    if (window.confirm('Are you sure you want to delete this farmer?')) {\n      setFarmers(farmers.filter(farmer => farmer.id !== farmerId));\n    }\n  };\n\n  // Handle farmer edit\n  const handleEditFarmer = (farmer) => {\n    setSelectedFarmer(farmer);\n    setShowFarmerModal(true);\n  };\n\n  // Generate report (mock function)\n  const generateReport = (type) => {\n    const reportData = {\n      farmers: farmers.length,\n      regions: regionalAnalytics.length,\n      totalAlerts: regionalAnalytics.reduce((sum, region) => sum + region.stressAlerts, 0),\n      avgYield: (regionalAnalytics.reduce((sum, region) => sum + region.avgYield, 0) / regionalAnalytics.length).toFixed(1)\n    };\n    \n    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `fasalneeti-${type}-report-${new Date().toISOString().split('T')[0]}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  if (!adminData) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-earth-500\"></div>\n      </div>\n    );\n  }\n\n  // Dashboard tabs configuration\n  const tabs = [\n    { id: 'overview', name: 'Overview', icon: 'üìä' },\n    { id: 'farmers', name: 'Farmers', icon: 'üë®‚Äçüåæ' },\n    { id: 'analytics', name: 'Analytics', icon: 'üìà' },\n    { id: 'reports', name: 'Reports', icon: 'üìã' }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-earth-50 to-crop-50 dark:from-gray-900 dark:to-gray-800\">\n      \n      {/* Dashboard Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-lg\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n            <div className=\"fade-in\">\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white flex items-center\">\n                <span className=\"mr-3\">üë®‚Äçüíº</span>\n                Admin Dashboard\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n                Welcome back, {adminData.username} ‚Ä¢ FasalNeeti Management Portal\n              </p>\n            </div>\n            <button\n              onClick={handleLogout}\n              className=\"mt-4 sm:mt-0 bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-colors duration-200\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex space-x-8 overflow-x-auto\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-4 px-2 border-b-2 font-medium text-sm whitespace-nowrap transition-colors duration-200 ${\n                  activeTab === tab.id\n                    ? 'border-earth-500 text-earth-600 dark:text-earth-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                <span className=\"mr-2\">{tab.icon}</span>\n                {tab.name}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Dashboard Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        \n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div className=\"space-y-8 fade-in\">\n            \n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"card p-6 text-center\">\n                <div className=\"text-3xl mb-2\">üë®‚Äçüåæ</div>\n                <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">{farmers.length}</div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Farmers</div>\n              </div>\n              <div className=\"card p-6 text-center\">\n                <div className=\"text-3xl mb-2\">üåç</div>\n                <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">{regionalAnalytics.length}</div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Regions Covered</div>\n              </div>\n              <div className=\"card p-6 text-center\">\n                <div className=\"text-3xl mb-2\">‚ö†Ô∏è</div>\n                <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {regionalAnalytics.reduce((sum, region) => sum + region.stressAlerts, 0)}\n                </div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Active Alerts</div>\n              </div>\n              <div className=\"card p-6 text-center\">\n                <div className=\"text-3xl mb-2\">üìà</div>\n                <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {(regionalAnalytics.reduce((sum, region) => sum + region.avgYield, 0) / regionalAnalytics.length).toFixed(1)}%\n                </div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Avg Yield</div>\n              </div>\n            </div>\n\n            {/* Regional Overview Chart */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                <span className=\"mr-2\">üó∫Ô∏è</span>\n                Regional Overview (‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®)\n              </h2>\n              <div className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart data={regionalAnalytics}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"region\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"farmers\" fill=\"#d18b56\" name=\"Farmers\" />\n                    <Bar dataKey=\"avgYield\" fill=\"#22c55e\" name=\"Avg Yield %\" />\n                    <Bar dataKey=\"stressAlerts\" fill=\"#ef4444\" name=\"Stress Alerts\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Farmers Tab */}\n        {activeTab === 'farmers' && (\n          <div className=\"space-y-8 fade-in\">\n            \n            {/* Farmers Table */}\n            <div className=\"card p-6\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-xl font-bold text-gray-900 dark:text-white flex items-center\">\n                  <span className=\"mr-2\">üë®‚Äçüåæ</span>\n                  Registered Farmers ({farmers.length})\n                </h2>\n                <button\n                  onClick={() => generateReport('farmers')}\n                  className=\"btn-secondary text-sm px-4 py-2\"\n                >\n                  Export Data\n                </button>\n              </div>\n              \n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Farmer Details\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Location\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Crop & Soil\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Registration\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {farmers.map((farmer) => (\n                      <tr key={farmer.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div>\n                            <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                              {farmer.name}\n                            </div>\n                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                              üì± {farmer.mobile}\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900 dark:text-white\">\n                            üìç {farmer.location}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900 dark:text-white\">\n                            üåæ {farmer.lastCrop}\n                          </div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            üå± {farmer.soilType}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900 dark:text-white\">\n                            {new Date(farmer.registrationDate).toLocaleDateString()}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <button\n                            onClick={() => handleEditFarmer(farmer)}\n                            className=\"text-earth-600 hover:text-earth-900 mr-4\"\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => handleDeleteFarmer(farmer.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Analytics Tab */}\n        {activeTab === 'analytics' && (\n          <div className=\"space-y-8 fade-in\">\n            \n            {/* Yield Trends */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                <span className=\"mr-2\">üìà</span>\n                Yield Trends by Region\n              </h2>\n              <div className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={regionalAnalytics}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"region\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"avgYield\"\n                      stroke=\"#22c55e\"\n                      strokeWidth={3}\n                      name=\"Average Yield %\"\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n\n            {/* Stress Distribution */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              <div className=\"card p-6\">\n                <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <span className=\"mr-2\">‚ö†Ô∏è</span>\n                  Overall Stress Distribution\n                </h2>\n                <div className=\"h-64\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={stressDetectionData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                      >\n                        {stressDetectionData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n\n              {/* Regional Alerts */}\n              <div className=\"card p-6\">\n                <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <span className=\"mr-2\">üö®</span>\n                  Stress Alerts by Region\n                </h2>\n                <div className=\"space-y-3\">\n                  {regionalAnalytics\n                    .sort((a, b) => b.stressAlerts - a.stressAlerts)\n                    .map((region, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                      <div>\n                        <div className=\"font-medium text-gray-900 dark:text-white\">{region.region}</div>\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">{region.farmers} farmers</div>\n                      </div>\n                      <div className={`px-3 py-1 rounded-full text-sm font-medium ${\n                        region.stressAlerts > 70 ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400' :\n                        region.stressAlerts > 40 ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400' :\n                        'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                      }`}>\n                        {region.stressAlerts} alerts\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Reports Tab */}\n        {activeTab === 'reports' && (\n          <div className=\"space-y-8 fade-in\">\n            \n            {/* Report Generation */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                <span className=\"mr-2\">üìã</span>\n                Generate Reports\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-6 text-center\">\n                  <div className=\"text-4xl mb-4\">üë®‚Äçüåæ</div>\n                  <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Farmers Report</h3>\n                  <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                    Complete list of registered farmers with their details\n                  </p>\n                  <button\n                    onClick={() => generateReport('farmers')}\n                    className=\"btn-primary w-full\"\n                  >\n                    Download\n                  </button>\n                </div>\n                \n                <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-6 text-center\">\n                  <div className=\"text-4xl mb-4\">üìä</div>\n                  <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Analytics Report</h3>\n                  <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                    Regional analytics and yield trends data\n                  </p>\n                  <button\n                    onClick={() => generateReport('analytics')}\n                    className=\"btn-primary w-full\"\n                  >\n                    Download\n                  </button>\n                </div>\n                \n                <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-6 text-center\">\n                  <div className=\"text-4xl mb-4\">‚ö†Ô∏è</div>\n                  <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">Alerts Report</h3>\n                  <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-4\">\n                    Stress alerts and emergency notifications\n                  </p>\n                  <button\n                    onClick={() => generateReport('alerts')}\n                    className=\"btn-primary w-full\"\n                  >\n                    Download\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* System Statistics */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                <span className=\"mr-2\">üìà</span>\n                System Statistics\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                <div className=\"text-center p-4 bg-earth-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-earth-600 dark:text-earth-400\">95.2%</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">System Uptime</div>\n                </div>\n                <div className=\"text-center p-4 bg-crop-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-crop-600 dark:text-crop-400\">1.2TB</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">Data Processed</div>\n                </div>\n                <div className=\"text-center p-4 bg-soil-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-soil-600 dark:text-soil-400\">24/7</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">Monitoring</div>\n                </div>\n                <div className=\"text-center p-4 bg-blue-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">99.1%</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">Accuracy Rate</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n","size_bytes":20964},"src/pages/AdminLogin.js":{"content":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Admin Login Component\n * Simple authentication for admin access\n */\nconst AdminLogin = () => {\n  const navigate = useNavigate();\n  \n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setError(''); // Clear error when user types\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Simple authentication (in real app, this would be server-side)\n      if (credentials.username === 'admin' && credentials.password === 'admin123') {\n        localStorage.setItem('adminData', JSON.stringify({\n          username: credentials.username,\n          role: 'admin',\n          loginTime: new Date().toISOString()\n        }));\n        localStorage.setItem('userType', 'admin');\n        navigate('/admin-dashboard');\n      } else {\n        setError('Invalid username or password');\n      }\n    } catch (error) {\n      setError('Login failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-earth-50 to-crop-50 dark:from-gray-900 dark:to-gray-800\">\n      <div className=\"max-w-md w-full space-y-8\">\n        \n        {/* Header */}\n        <div className=\"text-center fade-in\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-earth-500 to-crop-500 rounded-full mb-4\">\n            <span className=\"text-2xl\">üë®‚Äçüíº</span>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-2\">\n            Admin Login\n          </h1>\n          <p className=\"text-lg text-gray-600 dark:text-gray-400\">\n            ‡§™‡•ç‡§∞‡§∂‡§æ‡§∏‡§ï ‡§≤‡•â‡§ó‡§ø‡§® - Access administrative dashboard\n          </p>\n        </div>\n\n        {/* Login Form */}\n        <div className=\"card p-8 slide-in\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            \n            {/* Error Message */}\n            {error && (\n              <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-red-500 mr-2\">‚ö†Ô∏è</span>\n                  <span className=\"text-red-700 dark:text-red-400\">{error}</span>\n                </div>\n              </div>\n            )}\n\n            {/* Username Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Username\n              </label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={credentials.username}\n                onChange={handleInputChange}\n                className=\"input-field\"\n                placeholder=\"Enter admin username\"\n                required\n              />\n            </div>\n\n            {/* Password Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={credentials.password}\n                onChange={handleInputChange}\n                className=\"input-field\"\n                placeholder=\"Enter admin password\"\n                required\n              />\n            </div>\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className={`w-full btn-primary flex items-center justify-center space-x-3 ${\n                isLoading ? 'opacity-50 cursor-not-allowed' : ''\n              }`}\n            >\n              {isLoading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n                  <span>Logging in...</span>\n                </>\n              ) : (\n                <>\n                  <span>üîê</span>\n                  <span>Access Dashboard</span>\n                </>\n              )}\n            </button>\n          </form>\n\n          {/* Demo Credentials */}\n          <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg\">\n            <h3 className=\"font-semibold text-blue-800 dark:text-blue-400 mb-2\">Demo Credentials:</h3>\n            <div className=\"text-sm text-blue-700 dark:text-blue-300 space-y-1\">\n              <div><strong>Username:</strong> admin</div>\n              <div><strong>Password:</strong> admin123</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Help Section */}\n        <div className=\"text-center fade-in\">\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n            Need help accessing the admin panel?\n          </p>\n          <div className=\"flex justify-center space-x-6\">\n            <a href=\"mailto:admin@fasalneeti.com\" className=\"text-earth-600 hover:text-earth-700 flex items-center\">\n              <span className=\"mr-1\">‚úâÔ∏è</span>\n              admin@fasalneeti.com\n            </a>\n            <a href=\"tel:+911800654321\" className=\"text-earth-600 hover:text-earth-700 flex items-center\">\n              <span className=\"mr-1\">üìû</span>\n              1800-654-321\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLogin;\n","size_bytes":5991},"src/pages/FarmerDashboard.js":{"content":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport mongoService from '../services/mongoService';\n\n/**\n * Professional Farmer Dashboard with comprehensive farming insights\n * Features: Real-time data, predictions, recommendations, alerts\n */\nconst FarmerDashboard = () => {\n  const navigate = useNavigate();\n  const [farmerData, setFarmerData] = useState(null);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Mock data for demonstration\n  const yieldPredictionData = [\n    { month: 'Jan', predicted: 45, actual: 42, optimal: 50 },\n    { month: 'Feb', predicted: 52, actual: 48, optimal: 55 },\n    { month: 'Mar', predicted: 48, actual: 51, optimal: 52 },\n    { month: 'Apr', predicted: 61, actual: 58, optimal: 65 },\n    { month: 'May', predicted: 55, actual: 52, optimal: 60 },\n    { month: 'Jun', predicted: 67, actual: 65, optimal: 70 }\n  ];\n  \n  const stressDetectionData = [\n    { name: 'Healthy', value: 65, color: '#22c55e' },\n    { name: 'Drought Risk', value: 20, color: '#f59e0b' },\n    { name: 'Heat Stress', value: 10, color: '#ef4444' },\n    { name: 'Pest Risk', value: 5, color: '#8b5cf6' }\n  ];\n  \n  const weatherData = {\n    current: {\n      temperature: 28,\n      humidity: 65,\n      rainfall: 12.5,\n      windSpeed: 8.2,\n      soilMoisture: 45\n    }\n  };\n  \n  const recentAlerts = [\n    {\n      id: 1,\n      type: 'warning',\n      message: 'Low soil moisture detected - irrigation recommended',\n      timestamp: '2 hours ago',\n      priority: 'high'\n    },\n    {\n      id: 2,\n      type: 'info',\n      message: 'Weather forecast shows rain in next 3 days',\n      timestamp: '4 hours ago',\n      priority: 'medium'\n    },\n    {\n      id: 3,\n      type: 'success',\n      message: 'Crop growth is on track for this season',\n      timestamp: '1 day ago',\n      priority: 'low'\n    }\n  ];\n\n  // Load farmer data and dashboard data on component mount\n  useEffect(() => {\n    const loadDashboardData = async () => {\n      const userData = localStorage.getItem('farmerData');\n      const userType = localStorage.getItem('userType');\n      \n      if (!userData || userType !== 'farmer') {\n        navigate('/farmer-login');\n        return;\n      }\n      \n      const farmer = JSON.parse(userData);\n      setFarmerData(farmer);\n      \n      try {\n        // Try to fetch dashboard data from MongoDB\n        const result = await mongoService.getFarmerDashboard(farmer.id || 'demo');\n        \n        if (result.success) {\n          setDashboardData(result.data);\n        } else {\n          // Use mock data as fallback\n          console.warn('Using mock dashboard data');\n        }\n      } catch (error) {\n        console.warn('Dashboard API unavailable, using mock data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    loadDashboardData();\n  }, [navigate]);\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('farmerData');\n    localStorage.removeItem('userType');\n    navigate('/');\n  };\n\n  if (isLoading || !farmerData) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-primary-50 to-accent-50 dark:from-secondary-900 dark:to-secondary-800\">\n        <div className=\"text-center\">\n          <div className=\"spinner mb-4\"></div>\n          <p className=\"text-secondary-600 dark:text-secondary-400\">Loading your dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Dashboard tabs configuration\n  const tabs = [\n    { id: 'overview', name: 'Overview' },\n    { id: 'predictions', name: 'Predictions' },\n    { id: 'weather', name: 'Weather' },\n    { id: 'recommendations', name: 'Recommendations' },\n    { id: 'profile', name: 'Profile' }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-accent-50 dark:from-secondary-900 dark:to-secondary-800\">\n      \n      {/* Dashboard Header */}\n      <div className=\"bg-white dark:bg-secondary-800 shadow-lg border-b border-primary-100 dark:border-secondary-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n            <div className=\"animate-fade-in\">\n              <div className=\"flex items-center space-x-4 mb-2\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-primary-600 to-accent-600 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h1 className=\"text-3xl font-bold text-secondary-900 dark:text-white\">\n                    Welcome, {farmerData.name}\n                  </h1>\n                  <p className=\"text-secondary-600 dark:text-secondary-400\">\n                    {farmerData.location} ‚Ä¢ {farmerData.farmSize || 'Farm'} ‚Ä¢ {farmerData.lastCrop || 'Crop'}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <button\n              onClick={handleLogout}\n              className=\"mt-4 sm:mt-0 bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded-lg transition-colors duration-200 flex items-center space-x-2\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n              </svg>\n              <span>Logout</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"bg-white dark:bg-secondary-800 border-b border-primary-200 dark:border-secondary-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex space-x-1 overflow-x-auto\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-4 px-6 border-b-2 font-medium text-sm whitespace-nowrap transition-all duration-200 rounded-t-lg ${\n                  activeTab === tab.id\n                    ? 'border-primary-500 text-primary-700 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20'\n                    : 'border-transparent text-secondary-500 hover:text-secondary-700 dark:text-secondary-400 dark:hover:text-secondary-300 hover:bg-primary-50 dark:hover:bg-secondary-700'\n                }`}\n              >\n                {tab.name}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Dashboard Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        \n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div className=\"space-y-8 animate-fade-in\">\n            \n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n              <div className=\"stat-card animate-fade-in\">\n                <div className=\"relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-primary-500 to-primary-600 rounded-2xl flex items-center justify-center mb-6 mx-auto shadow-xl\">\n                    <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-4xl font-black text-primary-600 mb-2\">68%</div>\n                  <div className=\"text-sm font-semibold text-secondary-600 dark:text-secondary-400\">Predicted Yield</div>\n                </div>\n              </div>\n              <div className=\"stat-card animate-fade-in\" style={{animationDelay: '0.1s'}}>\n                <div className=\"relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-accent-500 to-accent-600 rounded-2xl flex items-center justify-center mb-6 mx-auto shadow-xl\">\n                    <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-4xl font-black text-accent-600 mb-2\">{weatherData.current.soilMoisture}%</div>\n                  <div className=\"text-sm font-semibold text-secondary-600 dark:text-secondary-400\">Soil Moisture</div>\n                </div>\n              </div>\n              <div className=\"stat-card animate-fade-in\" style={{animationDelay: '0.2s'}}>\n                <div className=\"relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-yellow-500 to-yellow-600 rounded-2xl flex items-center justify-center mb-6 mx-auto shadow-xl\">\n                    <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-4xl font-black text-yellow-600 mb-2\">{weatherData.current.temperature}¬∞C</div>\n                  <div className=\"text-sm font-semibold text-secondary-600 dark:text-secondary-400\">Temperature</div>\n                </div>\n              </div>\n              <div className=\"stat-card animate-fade-in\" style={{animationDelay: '0.3s'}}>\n                <div className=\"relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-2xl flex items-center justify-center mb-6 mx-auto shadow-xl\">\n                    <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-4xl font-black text-red-600 mb-2\">{recentAlerts.filter(a => a.priority === 'high').length}</div>\n                  <div className=\"text-sm font-semibold text-secondary-600 dark:text-secondary-400\">Active Alerts</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Alerts */}\n            <div className=\"dashboard-card\">\n              <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-red-100 dark:bg-red-900/20 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-5 5v-5zM4.828 7l6.586 6.586a2 2 0 002.828 0l6.586-6.586A2 2 0 0019.414 5H4.586A2 2 0 003.172 7z\" />\n                  </svg>\n                </div>\n                Recent Alerts & Notifications\n              </h2>\n              <div className=\"space-y-4\">\n                {recentAlerts.map((alert) => (\n                  <div\n                    key={alert.id}\n                    className={`p-4 rounded-lg border-l-4 transition-all duration-200 hover:shadow-md ${\n                      alert.type === 'warning'\n                        ? 'alert-warning'\n                        : alert.type === 'success'\n                        ? 'alert-success'\n                        : 'bg-blue-50 dark:bg-blue-900/20 border-blue-400 text-blue-800 dark:text-blue-200'\n                    }`}\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex items-start space-x-3\">\n                        <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                          alert.type === 'warning' ? 'bg-yellow-200 dark:bg-yellow-800' :\n                          alert.type === 'success' ? 'bg-green-200 dark:bg-green-800' :\n                          'bg-blue-200 dark:bg-blue-800'\n                        }`}>\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            {alert.type === 'warning' && <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z\" />}\n                            {alert.type === 'success' && <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />}\n                            {alert.type === 'info' && <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />}\n                          </svg>\n                        </div>\n                        <div className=\"flex-1\">\n                          <p className=\"font-medium mb-1\">\n                            {alert.message}\n                          </p>\n                          <p className=\"text-sm opacity-75\">\n                            {alert.timestamp}\n                          </p>\n                        </div>\n                      </div>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        alert.priority === 'high' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400' :\n                        alert.priority === 'medium' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400' :\n                        'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                      }`}>\n                        {alert.priority}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {/* Quick Actions */}\n              <div className=\"mt-6 pt-6 border-t border-primary-200 dark:border-secondary-700\">\n                <h3 className=\"text-lg font-semibold text-secondary-900 dark:text-white mb-4\">Quick Actions</h3>\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n                  <button className=\"btn-outline text-sm py-2 px-4 flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\n                    </svg>\n                    <span>Update Crop Data</span>\n                  </button>\n                  <button className=\"btn-outline text-sm py-2 px-4 flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                    <span>View Reports</span>\n                  </button>\n                  <button className=\"btn-outline text-sm py-2 px-4 flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <span>Get Support</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Predictions Tab */}\n        {activeTab === 'predictions' && (\n          <div className=\"space-y-8 animate-fade-in\">\n            \n            {/* Yield Prediction Chart */}\n            <div className=\"dashboard-card\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white flex items-center\">\n                  <div className=\"w-6 h-6 bg-primary-100 dark:bg-primary-900/20 rounded-lg flex items-center justify-center mr-3\">\n                    <svg className=\"w-4 h-4 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                    </svg>\n                  </div>\n                  Crop Yield Predictions\n                </h2>\n                <div className=\"text-sm text-secondary-600 dark:text-secondary-400\">\n                  Based on current conditions for {farmerData.lastCrop || 'your crop'}\n                </div>\n              </div>\n              <div className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={yieldPredictionData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                    <XAxis dataKey=\"month\" stroke=\"#6b7280\" />\n                    <YAxis stroke=\"#6b7280\" />\n                    <Tooltip \n                      contentStyle={{\n                        backgroundColor: 'white',\n                        border: '1px solid #e5e7eb',\n                        borderRadius: '8px',\n                        boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                      }}\n                    />\n                    <Legend />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"predicted\"\n                      stroke=\"#22c55e\"\n                      strokeWidth={3}\n                      name=\"AI Predicted Yield (%)\"\n                      dot={{ fill: '#22c55e', strokeWidth: 2, r: 4 }}\n                    />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"actual\"\n                      stroke=\"#059669\"\n                      strokeWidth={2}\n                      name=\"Actual Yield (%)\"\n                      dot={{ fill: '#059669', strokeWidth: 2, r: 4 }}\n                    />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"optimal\"\n                      stroke=\"#3b82f6\"\n                      strokeWidth={2}\n                      strokeDasharray=\"5 5\"\n                      name=\"Optimal Potential (%)\"\n                      dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n              \n              {/* Prediction Insights */}\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"bg-primary-50 dark:bg-primary-900/20 rounded-lg p-4\">\n                  <div className=\"text-sm text-primary-600 dark:text-primary-400 font-medium mb-1\">Current Prediction</div>\n                  <div className=\"text-2xl font-bold text-primary-700 dark:text-primary-300\">67%</div>\n                  <div className=\"text-xs text-primary-600 dark:text-primary-400\">Expected yield this month</div>\n                </div>\n                <div className=\"bg-accent-50 dark:bg-accent-900/20 rounded-lg p-4\">\n                  <div className=\"text-sm text-accent-600 dark:text-accent-400 font-medium mb-1\">Improvement Potential</div>\n                  <div className=\"text-2xl font-bold text-accent-700 dark:text-accent-300\">+8%</div>\n                  <div className=\"text-xs text-accent-600 dark:text-accent-400\">With optimal conditions</div>\n                </div>\n                <div className=\"bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-4\">\n                  <div className=\"text-sm text-yellow-600 dark:text-yellow-400 font-medium mb-1\">Confidence Level</div>\n                  <div className=\"text-2xl font-bold text-yellow-700 dark:text-yellow-300\">94%</div>\n                  <div className=\"text-xs text-yellow-600 dark:text-yellow-400\">Prediction accuracy</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Stress Detection Chart */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              <div className=\"card p-6\">\n                <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                  <div className=\"w-6 h-6 bg-red-100 dark:bg-red-900/20 rounded-lg flex items-center justify-center mr-3\">\n                    <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                    </svg>\n                  </div>\n                  Crop Health Analysis\n                </h2>\n                <div className=\"h-64\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={stressDetectionData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                      >\n                        {stressDetectionData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n\n              {/* Farm Details */}\n              <div className=\"dashboard-card\">\n                <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                  <div className=\"w-6 h-6 bg-accent-100 dark:bg-accent-900/20 rounded-lg flex items-center justify-center mr-3\">\n                    <svg className=\"w-4 h-4 text-accent-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064\" />\n                    </svg>\n                  </div>\n                  Farm Profile\n                </h2>\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                    <span className=\"text-secondary-600 dark:text-secondary-400\">Farm Size:</span>\n                    <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.farmSize || 'Not specified'}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                    <span className=\"text-secondary-600 dark:text-secondary-400\">Soil Type:</span>\n                    <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.soilType}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                    <span className=\"text-secondary-600 dark:text-secondary-400\">Soil pH:</span>\n                    <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.soilPH || 'Not tested'}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                    <span className=\"text-secondary-600 dark:text-secondary-400\">Current Crop:</span>\n                    <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.lastCrop}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                    <span className=\"text-secondary-600 dark:text-secondary-400\">Irrigation:</span>\n                    <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.irrigationType}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2\">\n                    <span className=\"text-secondary-600 dark:text-secondary-400\">Experience:</span>\n                    <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.farmingExperience || 'Not specified'}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Weather Tab */}\n        {activeTab === 'weather' && (\n          <div className=\"space-y-8 animate-fade-in\">\n            \n            {/* Current Weather */}\n            <div className=\"dashboard-card\">\n              <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-yellow-100 dark:bg-yellow-900/20 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                  </svg>\n                </div>\n                Current Weather Conditions\n              </h2>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n                <div className=\"text-center p-4 bg-primary-50 dark:bg-primary-900/20 rounded-lg\">\n                  <div className=\"w-8 h-8 bg-yellow-200 dark:bg-yellow-800 rounded-full flex items-center justify-center mx-auto mb-2\">\n                    <svg className=\"w-4 h-4 text-yellow-800 dark:text-yellow-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                    </svg>\n                  </div>\n                  <div className=\"text-lg font-bold text-secondary-900 dark:text-white\">{weatherData.current.temperature}¬∞C</div>\n                  <div className=\"text-sm text-secondary-600 dark:text-secondary-400\">Temperature</div>\n                </div>\n                <div className=\"text-center p-4 bg-earth-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl mb-2\">üíß</div>\n                  <div className=\"text-lg font-bold text-gray-900 dark:text-white\">{weatherData.current.humidity}%</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">Humidity</div>\n                </div>\n                <div className=\"text-center p-4 bg-earth-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl mb-2\">üåßÔ∏è</div>\n                  <div className=\"text-lg font-bold text-gray-900 dark:text-white\">{weatherData.current.rainfall}mm</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">Rainfall</div>\n                </div>\n                <div className=\"text-center p-4 bg-earth-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl mb-2\">üí®</div>\n                  <div className=\"text-lg font-bold text-gray-900 dark:text-white\">{weatherData.current.windSpeed} km/h</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">Wind Speed</div>\n                </div>\n                <div className=\"text-center p-4 bg-earth-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl mb-2\">‚òÄÔ∏è</div>\n                  <div className=\"text-lg font-bold text-gray-900 dark:text-white\">{weatherData.current.uvIndex}</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">UV Index</div>\n                </div>\n                <div className=\"text-center p-4 bg-earth-50 dark:bg-gray-700 rounded-lg\">\n                  <div className=\"text-2xl mb-2\">üå±</div>\n                  <div className=\"text-lg font-bold text-gray-900 dark:text-white\">{weatherData.current.soilMoisture}%</div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">Soil Moisture</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Weather Forecast */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                <span className=\"mr-2\">üìÖ</span>\n                5-Day Forecast (5 ‡§¶‡§ø‡§® ‡§ï‡§æ ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§®‡•Å‡§Æ‡§æ‡§®)\n              </h2>\n              <div className=\"grid grid-cols-1 sm:grid-cols-5 gap-4\">\n                {weatherData.forecast.map((day, index) => (\n                  <div key={index} className=\"text-center p-4 bg-gradient-to-br from-earth-50 to-crop-50 dark:from-gray-700 dark:to-gray-600 rounded-lg\">\n                    <div className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-2\">{day.day}</div>\n                    <div className=\"text-3xl mb-2\">{day.icon}</div>\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">{day.temp}¬∞C</div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">{day.condition}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Recommendations Tab */}\n        {activeTab === 'recommendations' && (\n          <div className=\"space-y-8 animate-fade-in\">\n            \n            {/* Fertilizer Recommendations */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-accent-100 dark:bg-accent-900/20 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-accent-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364-.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                </div>\n                Smart Recommendations\n              </h2>\n              <div className=\"space-y-4\">\n                {fertilizerRecommendations.map((rec, index) => (\n                  <div key={index} className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white\">{rec.type}</h3>\n                      <span className={`px-3 py-1 rounded-full text-sm ${\n                        rec.status === 'increase' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400' :\n                        rec.status === 'decrease' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400' :\n                        'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                      }`}>\n                        {rec.status === 'increase' ? '‚Üë Increase' : rec.status === 'decrease' ? '‚Üì Decrease' : '‚úì Optimal'}\n                      </span>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <span className=\"text-gray-600 dark:text-gray-400\">Recommended: </span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{rec.recommended}</span>\n                      </div>\n                      <div>\n                        <span className=\"text-gray-600 dark:text-gray-400\">Current: </span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{rec.current}</span>\n                      </div>\n                    </div>\n                    <p className=\"text-gray-600 dark:text-gray-400 mt-2 text-sm\">{rec.advice}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* General Advice */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-primary-100 dark:bg-primary-900/20 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364-.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                </div>\n                Expert Farming Tips\n              </h2>\n              <div className=\"space-y-4\">\n                <div className=\"alert-success\">\n                  <h3 className=\"font-semibold mb-2 flex items-center\">\n                    <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    Best Practices for Your Farm\n                  </h3>\n                  <ul className=\"text-sm space-y-2\">\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Maintain optimal soil moisture levels (45-60%)\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Use organic fertilizers for sustainable growth\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Monitor crop health weekly for early detection\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Follow integrated pest management practices\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"alert-warning\">\n                  <h3 className=\"font-semibold mb-2 flex items-center\">\n                    <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                    </svg>\n                    Important Precautions\n                  </h3>\n                  <ul className=\"text-sm space-y-2\">\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Avoid overwatering - check soil moisture before irrigation\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Stay updated with weather forecasts for planning\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Regular pest monitoring prevents major infestations\n                    </li>\n                    <li className=\"flex items-start\">\n                      <span className=\"w-1.5 h-1.5 bg-current rounded-full mt-2 mr-2 flex-shrink-0\"></span>\n                      Test soil pH annually for optimal nutrient management\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Profile Tab */}\n        {activeTab === 'profile' && (\n          <div className=\"space-y-8 animate-fade-in\">\n            \n            {/* Profile Information */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-primary-100 dark:bg-primary-900/20 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                Farmer Profile\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                {/* Personal Information */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-secondary-900 dark:text-white mb-4\">Personal Information</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Name:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.name}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Email:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.email || 'Not provided'}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Mobile:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.mobile}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Location:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.location}</span>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Farm Information */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-secondary-900 dark:text-white mb-4\">Farm Information</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Farm Size:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.farmSize || 'Not specified'}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Soil Type:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.soilType}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2 border-b border-primary-100 dark:border-secondary-700\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Current Crop:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.lastCrop}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2\">\n                      <span className=\"text-secondary-600 dark:text-secondary-400\">Experience:</span>\n                      <span className=\"font-medium text-secondary-900 dark:text-white\">{farmerData.farmingExperience || 'Not specified'}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Action Buttons */}\n              <div className=\"mt-8 pt-6 border-t border-primary-200 dark:border-secondary-700\">\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                  <button className=\"btn-primary flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                    <span>Edit Profile</span>\n                  </button>\n                  <button className=\"btn-outline flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <span>Download Data</span>\n                  </button>\n                  <button className=\"btn-outline flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <span>Help & Support</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            {/* Account Settings */}\n            <div className=\"card p-6\">\n              <h2 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-secondary-100 dark:bg-secondary-700 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-secondary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                </div>\n                Account Settings\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between p-4 bg-primary-50 dark:bg-primary-900/20 rounded-lg\">\n                    <div>\n                      <h3 className=\"font-medium text-secondary-900 dark:text-white\">Notifications</h3>\n                      <p className=\"text-sm text-secondary-600 dark:text-secondary-400\">Receive alerts and updates</p>\n                    </div>\n                    <button className=\"bg-primary-600 relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\">\n                      <span className=\"translate-x-6 inline-block h-4 w-4 transform rounded-full bg-white transition-transform\" />\n                    </button>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between p-4 bg-accent-50 dark:bg-accent-900/20 rounded-lg\">\n                    <div>\n                      <h3 className=\"font-medium text-secondary-900 dark:text-white\">Weather Alerts</h3>\n                      <p className=\"text-sm text-secondary-600 dark:text-secondary-400\">Get weather-based farming alerts</p>\n                    </div>\n                    <button className=\"bg-accent-600 relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-accent-500 focus:ring-offset-2\">\n                      <span className=\"translate-x-6 inline-block h-4 w-4 transform rounded-full bg-white transition-transform\" />\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  <div className=\"p-4 border border-secondary-200 dark:border-secondary-700 rounded-lg\">\n                    <h3 className=\"font-medium text-secondary-900 dark:text-white mb-2\">Data Privacy</h3>\n                    <p className=\"text-sm text-secondary-600 dark:text-secondary-400 mb-3\">Your farming data is secure and private</p>\n                    <button className=\"text-primary-600 hover:text-primary-700 text-sm font-medium\">\n                      View Privacy Policy\n                    </button>\n                  </div>\n                  \n                  <div className=\"p-4 border border-secondary-200 dark:border-secondary-700 rounded-lg\">\n                    <h3 className=\"font-medium text-secondary-900 dark:text-white mb-2\">Account Security</h3>\n                    <p className=\"text-sm text-secondary-600 dark:text-secondary-400 mb-3\">Manage your account security settings</p>\n                    <button className=\"text-primary-600 hover:text-primary-700 text-sm font-medium\">\n                      Change Password\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FarmerDashboard;\n","size_bytes":49058},"src/pages/FarmerLogin.js":{"content":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport mongoService from '../services/mongoService';\n\n/**\n * Professional Farmer Registration component with MongoDB integration\n * Clean design, comprehensive validation, and database storage\n */\nconst FarmerLogin = () => {\n  const navigate = useNavigate();\n  \n  // Form state management\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    location: '',\n    farmSize: '',\n    soilType: '',\n    soilPH: '',\n    lastCrop: '',\n    irrigationType: '',\n    fertilizerUsage: '',\n    pesticidesUsed: '',\n    farmingExperience: '',\n    sensorData: null\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Dropdown options\n  const soilTypes = [\n    'Alluvial Soil',\n    'Black Cotton Soil',\n    'Red Soil',\n    'Laterite Soil',\n    'Desert Soil',\n    'Mountain Soil',\n    'Clay Loam',\n    'Sandy Loam'\n  ];\n\n  const irrigationTypes = [\n    'Drip Irrigation',\n    'Sprinkler Irrigation',\n    'Flood Irrigation',\n    'Furrow Irrigation',\n    'Rain Fed',\n    'Tube Well',\n    'Canal Irrigation',\n    'Tank Irrigation'\n  ];\n\n  const cropTypes = [\n    'Wheat', 'Rice', 'Maize', 'Cotton', 'Sugarcane', \n    'Mustard', 'Chickpea', 'Soybean', 'Barley', 'Millet'\n  ];\n\n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    setFormData(prev => ({\n      ...prev,\n      sensorData: file\n    }));\n  };\n\n  // Form validation\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) newErrors.name = 'Name is required';\n    if (!formData.email.trim()) newErrors.email = 'Email is required';\n    if (!formData.location.trim()) newErrors.location = 'Location is required';\n    if (!formData.mobile.trim()) newErrors.mobile = 'Mobile number is required';\n    if (!formData.soilType) newErrors.soilType = 'Please select soil type';\n    if (!formData.lastCrop) newErrors.lastCrop = 'Please specify last crop';\n    if (!formData.irrigationType) newErrors.irrigationType = 'Please select irrigation type';\n    if (!formData.farmSize.trim()) newErrors.farmSize = 'Farm size is required';\n    \n    // Email validation\n    if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n    \n    // Mobile number validation\n    if (formData.mobile && !/^[+]?[0-9]{10,13}$/.test(formData.mobile.replace(/\\s/g, ''))) {\n      newErrors.mobile = 'Please enter a valid mobile number';\n    }\n    \n    // Soil pH validation\n    if (formData.soilPH && (formData.soilPH < 0 || formData.soilPH > 14)) {\n      newErrors.soilPH = 'pH should be between 0-14';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    setIsLoading(true);\n    setSuccessMessage('');\n    \n    try {\n      // Try to register farmer with MongoDB\n      const result = await mongoService.registerFarmer(formData);\n      \n      if (result.success) {\n        setSuccessMessage('Registration successful! Redirecting to dashboard...');\n        \n        // Store farmer data locally as backup\n        localStorage.setItem('farmerData', JSON.stringify(result.data.farmer || formData));\n        localStorage.setItem('userType', 'farmer');\n        \n        // Navigate to farmer dashboard after short delay\n        setTimeout(() => {\n          navigate('/farmer-dashboard');\n        }, 2000);\n      } else {\n        // Fallback to localStorage if API fails\n        console.warn('API registration failed, using localStorage:', result.error);\n        \n        localStorage.setItem('farmerData', JSON.stringify(formData));\n        localStorage.setItem('userType', 'farmer');\n        \n        setSuccessMessage('Registration completed! Redirecting to dashboard...');\n        setTimeout(() => {\n          navigate('/farmer-dashboard');\n        }, 1500);\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      \n      // Fallback to localStorage\n      localStorage.setItem('farmerData', JSON.stringify(formData));\n      localStorage.setItem('userType', 'farmer');\n      \n      setSuccessMessage('Registration completed! Redirecting to dashboard...');\n      setTimeout(() => {\n        navigate('/farmer-dashboard');\n      }, 1500);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen py-12 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-primary-50 to-accent-50 dark:from-secondary-900 dark:to-secondary-800\">\n      <div className=\"max-w-4xl mx-auto\">\n        \n        {/* Header */}\n        <div className=\"text-center mb-8 animate-fade-in\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-primary-600 to-accent-600 rounded-2xl mb-6 shadow-lg\">\n            <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </div>\n          <h1 className=\"text-4xl font-bold text-secondary-900 dark:text-white mb-2\">\n            Farmer Registration\n          </h1>\n          <p className=\"text-lg text-secondary-600 dark:text-secondary-400\">\n            Join FasalNeeti and transform your farming with smart technology\n          </p>\n        </div>\n\n        {/* Success Message */}\n        {successMessage && (\n          <div className=\"alert-success mb-6 animate-fade-in\">\n            <div className=\"flex items-center\">\n              <svg className=\"w-5 h-5 text-primary-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n              </svg>\n              <span>{successMessage}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Registration Form */}\n        <div className=\"form-container animate-slide-up\">\n          <div className=\"relative z-10\">\n            <form onSubmit={handleSubmit} className=\"space-y-10\">\n            \n            {/* Personal Information Section */}\n            <div className=\"border-b border-primary-200 dark:border-secondary-700 pb-8\">\n              <h2 className=\"text-xl font-semibold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-primary-100 dark:bg-primary-900/20 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                Personal Information\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Full Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.name ? 'border-red-500 focus:ring-red-500' : ''}`}\n                    placeholder=\"Enter your full name\"\n                  />\n                  {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Email Address *\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.email ? 'border-red-500 focus:ring-red-500' : ''}`}\n                    placeholder=\"farmer@example.com\"\n                  />\n                  {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Mobile Number *\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"mobile\"\n                    value={formData.mobile}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.mobile ? 'border-red-500 focus:ring-red-500' : ''}`}\n                    placeholder=\"+91 98765 43210\"\n                  />\n                  {errors.mobile && <p className=\"text-red-500 text-sm mt-1\">{errors.mobile}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Location *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"location\"\n                    value={formData.location}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.location ? 'border-red-500 focus:ring-red-500' : ''}`}\n                    placeholder=\"State, District, Village\"\n                  />\n                  {errors.location && <p className=\"text-red-500 text-sm mt-1\">{errors.location}</p>}\n                </div>\n              </div>\n            </div>\n\n            {/* Farming Information Section */}\n            <div className=\"border-b border-primary-200 dark:border-secondary-700 pb-8\">\n              <h2 className=\"text-xl font-semibold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-accent-100 dark:bg-accent-900/20 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-accent-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064\" />\n                  </svg>\n                </div>\n                Farm Information\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Farm Size *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"farmSize\"\n                    value={formData.farmSize}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.farmSize ? 'border-red-500 focus:ring-red-500' : ''}`}\n                    placeholder=\"e.g., 2 acres, 5 hectares\"\n                  />\n                  {errors.farmSize && <p className=\"text-red-500 text-sm mt-1\">{errors.farmSize}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Soil Type *\n                  </label>\n                  <select\n                    name=\"soilType\"\n                    value={formData.soilType}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.soilType ? 'border-red-500 focus:ring-red-500' : ''}`}\n                  >\n                    <option value=\"\">Select soil type</option>\n                    {soilTypes.map((type, index) => (\n                      <option key={index} value={type}>{type}</option>\n                    ))}\n                  </select>\n                  {errors.soilType && <p className=\"text-red-500 text-sm mt-1\">{errors.soilType}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Soil pH (Optional)\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"soilPH\"\n                    value={formData.soilPH}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.soilPH ? 'border-red-500 focus:ring-red-500' : ''}`}\n                    placeholder=\"6.0 - 8.0\"\n                    min=\"0\"\n                    max=\"14\"\n                    step=\"0.1\"\n                  />\n                  {errors.soilPH && <p className=\"text-red-500 text-sm mt-1\">{errors.soilPH}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Last Crop Grown *\n                  </label>\n                  <select\n                    name=\"lastCrop\"\n                    value={formData.lastCrop}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.lastCrop ? 'border-red-500 focus:ring-red-500' : ''}`}\n                  >\n                    <option value=\"\">Select crop</option>\n                    {cropTypes.map((crop, index) => (\n                      <option key={index} value={crop}>{crop}</option>\n                    ))}\n                  </select>\n                  {errors.lastCrop && <p className=\"text-red-500 text-sm mt-1\">{errors.lastCrop}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Irrigation Type *\n                  </label>\n                  <select\n                    name=\"irrigationType\"\n                    value={formData.irrigationType}\n                    onChange={handleInputChange}\n                    className={`input-field ${errors.irrigationType ? 'border-red-500 focus:ring-red-500' : ''}`}\n                  >\n                    <option value=\"\">Select irrigation type</option>\n                    {irrigationTypes.map((type, index) => (\n                      <option key={index} value={type}>{type}</option>\n                    ))}\n                  </select>\n                  {errors.irrigationType && <p className=\"text-red-500 text-sm mt-1\">{errors.irrigationType}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Farming Experience\n                  </label>\n                  <select\n                    name=\"farmingExperience\"\n                    value={formData.farmingExperience}\n                    onChange={handleInputChange}\n                    className=\"input-field\"\n                  >\n                    <option value=\"\">Select experience</option>\n                    <option value=\"Less than 1 year\">Less than 1 year</option>\n                    <option value=\"1-5 years\">1-5 years</option>\n                    <option value=\"5-10 years\">5-10 years</option>\n                    <option value=\"10-20 years\">10-20 years</option>\n                    <option value=\"More than 20 years\">More than 20 years</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Fertilizer Usage\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"fertilizerUsage\"\n                    value={formData.fertilizerUsage}\n                    onChange={handleInputChange}\n                    className=\"input-field\"\n                    placeholder=\"Organic, NPK, DAP, etc.\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-secondary-700 dark:text-secondary-300 mb-2\">\n                    Pesticide Usage\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"pesticidesUsed\"\n                    value={formData.pesticidesUsed}\n                    onChange={handleInputChange}\n                    className=\"input-field\"\n                    placeholder=\"Organic, Chemical, or None\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Optional Data Upload Section */}\n            <div className=\"pb-8\">\n              <h2 className=\"text-xl font-semibold text-secondary-900 dark:text-white mb-6 flex items-center\">\n                <div className=\"w-6 h-6 bg-secondary-100 dark:bg-secondary-700 rounded-lg flex items-center justify-center mr-3\">\n                  <svg className=\"w-4 h-4 text-secondary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\n                  </svg>\n                </div>\n                Additional Data (Optional)\n              </h2>\n              \n              <div className=\"border-2 border-dashed border-primary-300 dark:border-secondary-600 rounded-lg p-8 text-center hover:border-primary-400 dark:hover:border-secondary-500 transition-colors duration-200\">\n                <input\n                  type=\"file\"\n                  onChange={handleFileUpload}\n                  accept=\".csv,.json,.xlsx,.jpg,.png,.pdf\"\n                  className=\"hidden\"\n                  id=\"file-upload\"\n                />\n                <label\n                  htmlFor=\"file-upload\"\n                  className=\"cursor-pointer flex flex-col items-center\"\n                >\n                  <div className=\"w-16 h-16 bg-primary-100 dark:bg-primary-900/20 rounded-full flex items-center justify-center mb-4\">\n                    <svg className=\"w-8 h-8 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\n                    </svg>\n                  </div>\n                  <span className=\"text-secondary-700 dark:text-secondary-300 mb-2 font-medium\">\n                    Upload sensor data or crop images\n                  </span>\n                  <span className=\"text-sm text-secondary-500 dark:text-secondary-400\">\n                    Supported formats: CSV, JSON, Excel, Images, PDF\n                  </span>\n                </label>\n                {formData.sensorData && (\n                  <div className=\"mt-4 p-3 bg-primary-50 dark:bg-primary-900/20 rounded-lg\">\n                    <p className=\"text-primary-700 dark:text-primary-300 flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      File uploaded: {formData.sensorData.name}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Submit Button */}\n            <div className=\"flex justify-center pt-8\">\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className={`btn-primary text-lg px-12 py-4 flex items-center space-x-3 ${\n                  isLoading ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n              >\n                {isLoading ? (\n                  <>\n                    <div className=\"spinner\"></div>\n                    <span>Creating Account...</span>\n                  </>\n                ) : (\n                  <>\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                    <span>Create Account & Continue</span>\n                  </>\n                )}\n              </button>\n            </div>\n            </form>\n          </div>\n        </div>\n\n        {/* Support Information */}\n        <div className=\"mt-8 text-center animate-fade-in\">\n          <div className=\"text-sm text-secondary-600 dark:text-secondary-400\">\n            Need help with registration? Contact us at{' '}\n            <a \n              href=\"mailto:support@fasalneeti.com\" \n              className=\"text-primary-600 hover:text-primary-700 font-medium\"\n            >\n              support@fasalneeti.com\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FarmerLogin;\n","size_bytes":22001},"src/pages/Homepage.js":{"content":"import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * Professional Homepage component with clean design and farmer-focused content\n * Features: Hero section, feature highlights, call-to-action, testimonials\n */\nconst Homepage = () => {\n  \n  // Feature highlights data\n  const features = [\n    {\n      title: 'Crop Yield Prediction',\n      description: 'Advanced AI-powered analysis using soil data, weather patterns, and historical crop information to provide accurate yield forecasting for better planning.',\n      details: ['Soil composition analysis', 'Weather pattern integration', 'Historical data modeling', 'Machine learning algorithms']\n    },\n    {\n      title: 'Smart Monitoring System',\n      description: 'Real-time monitoring and intelligent alerts for drought conditions, heat stress, pest detection, and crop health management.',\n      details: ['Drought monitoring', 'Heat stress detection', 'Pest outbreak alerts', 'Crop health tracking']\n    },\n    {\n      title: 'Scientific AI Models',\n      description: 'Trustworthy, science-based predictions using federated learning and physics-informed AI for reliable agricultural insights.',\n      details: ['Federated learning', 'Physics-based models', 'Scientific validation', 'Privacy-preserving AI']\n    },\n    {\n      title: 'Comprehensive Dashboard',\n      description: 'Interactive analytics platform with detailed maps, charts, weather data, and actionable insights for informed decision making.',\n      details: ['Real-time maps', 'Yield analytics', 'Weather insights', 'Data visualization']\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen overflow-hidden\">\n      \n      {/* Spectacular Hero Section with Your Background Image */}\n      <section \n        className=\"relative min-h-screen flex items-center justify-center overflow-hidden bg-cover bg-center bg-no-repeat\"\n        style={{\n          backgroundImage: `url('/home.jpg')`,\n        }}\n      >\n        \n        {/* Dynamic Overlay with Gradient */}\n        <div className=\"absolute inset-0 bg-gradient-to-br from-black/40 via-black/20 to-black/50\"></div>\n        \n        {/* Floating Geometric Shapes */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <div className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-primary-500/20 rounded-full blur-3xl animate-float\"></div>\n          <div className=\"absolute top-3/4 right-1/4 w-96 h-96 bg-accent-500/10 rounded-full blur-3xl animate-float-delayed\"></div>\n          <div className=\"absolute bottom-1/4 left-1/3 w-48 h-48 bg-white/10 rounded-full blur-2xl animate-pulse\"></div>\n        </div>\n        \n        {/* Particle Effect Overlay */}\n        <div className=\"absolute inset-0 opacity-20\">\n          <div className=\"absolute inset-0\" style={{\n            backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.3'%3E%3Ccircle cx='7' cy='7' r='1'/%3E%3Ccircle cx='27' cy='7' r='1'/%3E%3Ccircle cx='47' cy='7' r='1'/%3E%3Ccircle cx='7' cy='27' r='1'/%3E%3Ccircle cx='27' cy='27' r='1'/%3E%3Ccircle cx='47' cy='27' r='1'/%3E%3Ccircle cx='7' cy='47' r='1'/%3E%3Ccircle cx='27' cy='47' r='1'/%3E%3Ccircle cx='47' cy='47' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`\n          }}></div>\n        </div>\n        \n        {/* Main Content */}\n        <div className=\"relative z-10 text-center px-4 sm:px-6 lg:px-8 max-w-7xl mx-auto\">\n          \n          {/* Hero Content - No Logo */}\n          <div className=\"mb-16 animate-fade-in\">\n            \n            {/* Magnificent Typography */}\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-black text-white mb-6 tracking-wide transform hover:scale-105 transition-all duration-500\">\n              <span className=\"bg-gradient-to-r from-white via-primary-100 to-accent-100 bg-clip-text text-transparent drop-shadow-2xl font-serif italic\">\n                FasalNeeti\n              </span>\n            </h1>\n            \n            <div className=\"relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-r from-primary-500/20 to-accent-500/20 rounded-3xl blur-2xl\"></div>\n              <p className=\"relative text-lg sm:text-xl lg:text-2xl text-white font-bold mb-4 px-10 py-6 rounded-3xl bg-gradient-to-r from-white/15 to-white/25 backdrop-blur-lg border border-white/40 shadow-2xl transform hover:scale-105 transition-all duration-500\">\n                <span className=\"bg-gradient-to-r from-white to-primary-100 bg-clip-text text-transparent font-serif\">\n                  Apni Mitti, Apna Data, Apna Bhavishya\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n        \n        {/* Scroll Indicator */}\n        <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce\">\n          <div className=\"w-6 h-10 border-2 border-white/50 rounded-full flex justify-center\">\n            <div className=\"w-1 h-3 bg-white/70 rounded-full mt-2 animate-pulse\"></div>\n          </div>\n        </div>\n      </section>\n\n      {/* Content Section Below Hero */}\n      <section className=\"relative py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-b from-white via-primary-50/30 to-accent-50/30 dark:from-secondary-900 dark:via-secondary-800 dark:to-secondary-900\">\n        <div className=\"max-w-7xl mx-auto\">\n          \n          {/* Elegant Description */}\n          <div className=\"text-center mb-16 animate-fade-in\">\n            <div className=\"relative inline-block mb-8\">\n              <div className=\"absolute inset-0 bg-primary-200/50 rounded-2xl blur-xl\"></div>\n              <h2 className=\"relative text-2xl sm:text-3xl font-bold text-secondary-900 dark:text-white px-8 py-4 rounded-2xl bg-white/80 dark:bg-secondary-800/80 backdrop-blur-md border border-primary-200 dark:border-secondary-700 shadow-xl\">\n                Smart Agriculture Solutions for Modern Farmers\n              </h2>\n            </div>\n            <p className=\"text-xl text-secondary-700 dark:text-secondary-300 leading-relaxed max-w-4xl mx-auto mb-12\">\n              Transform your farming with cutting-edge technology. Get accurate crop predictions, \n              real-time monitoring, and actionable insights to maximize your harvest and profitability.\n            </p>\n          </div>\n\n          {/* Stunning Feature Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-16\">\n            <div className=\"group relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary-400 to-accent-500 rounded-2xl blur-xl opacity-20 group-hover:opacity-30 transition-opacity duration-500\"></div>\n              <div className=\"relative bg-white/90 dark:bg-secondary-800/90 backdrop-blur-xl rounded-2xl p-8 text-center border border-primary-200/50 dark:border-secondary-700/50 shadow-2xl hover:shadow-3xl transition-all duration-500 hover:-translate-y-2\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary-500 to-accent-500 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                  <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-3\">Smart Technology</h3>\n                <p className=\"text-secondary-600 dark:text-secondary-400\">AI-powered agricultural insights</p>\n              </div>\n            </div>\n\n            <div className=\"group relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-accent-400 to-primary-500 rounded-2xl blur-xl opacity-20 group-hover:opacity-30 transition-opacity duration-500\"></div>\n              <div className=\"relative bg-white/90 dark:bg-secondary-800/90 backdrop-blur-xl rounded-2xl p-8 text-center border border-accent-200/50 dark:border-secondary-700/50 shadow-2xl hover:shadow-3xl transition-all duration-500 hover:-translate-y-2\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-accent-500 to-primary-500 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                  <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-3\">Sustainable Farming</h3>\n                <p className=\"text-secondary-600 dark:text-secondary-400\">Eco-friendly practices</p>\n              </div>\n            </div>\n\n            <div className=\"group relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary-400 to-accent-500 rounded-2xl blur-xl opacity-20 group-hover:opacity-30 transition-opacity duration-500\"></div>\n              <div className=\"relative bg-white/90 dark:bg-secondary-800/90 backdrop-blur-xl rounded-2xl p-8 text-center border border-primary-200/50 dark:border-secondary-700/50 shadow-2xl hover:shadow-3xl transition-all duration-500 hover:-translate-y-2\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary-500 to-accent-500 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg group-hover:scale-110 transition-transform duration-300\">\n                  <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-3\">Easy to Use</h3>\n                <p className=\"text-secondary-600 dark:text-secondary-400\">User-friendly interface</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Spectacular Call-to-Action Buttons */}\n          <div className=\"flex flex-col sm:flex-row gap-6 justify-center items-center\">\n            <Link\n              to=\"/farmer-login\"\n              className=\"group relative overflow-hidden bg-gradient-to-r from-primary-600 to-accent-600 hover:from-primary-700 hover:to-accent-700 text-white font-bold py-5 px-12 rounded-2xl shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-1 hover:scale-105\"\n            >\n              <div className=\"absolute inset-0 bg-white/20 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-1000 skew-x-12\"></div>\n              <div className=\"relative flex items-center space-x-3 text-lg\">\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n                <span>Start Farming Smart</span>\n              </div>\n            </Link>\n            \n            <Link\n              to=\"/admin-login\"\n              className=\"group relative overflow-hidden bg-white/80 dark:bg-secondary-800/80 backdrop-blur-xl border-2 border-primary-300 dark:border-secondary-600 text-primary-700 dark:text-primary-400 hover:text-white font-bold py-5 px-12 rounded-2xl shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-1 hover:scale-105 hover:bg-primary-600 dark:hover:bg-primary-600\"\n            >\n              <div className=\"relative flex items-center space-x-3 text-lg\">\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.031 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                </svg>\n                <span>Admin Portal</span>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-white dark:bg-secondary-900\">\n        <div className=\"max-w-7xl mx-auto\">\n          \n          {/* Section Header */}\n          <div className=\"text-center mb-16 animate-fade-in\">\n            <h2 className=\"section-title\">\n              Powerful Features for Smart Farming\n            </h2>\n            <p className=\"section-subtitle max-w-3xl mx-auto\">\n              Discover how FasalNeeti combines cutting-edge technology with agricultural expertise \n              to help you make data-driven farming decisions.\n            </p>\n          </div>\n\n          {/* Features Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-10\">\n            {features.map((feature, index) => (\n              <div \n                key={index} \n                className=\"card p-10 hover:shadow-4xl transition-all duration-500 animate-slide-up group hover:-translate-y-3 hover:scale-[1.02]\"\n                style={{ animationDelay: `${index * 0.15}s` }}\n              >\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-primary-100 dark:bg-primary-900/20 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <div className=\"w-6 h-6 bg-primary-600 rounded-full\"></div>\n                  </div>\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-bold text-secondary-900 dark:text-white mb-3\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-secondary-600 dark:text-secondary-400 mb-4 leading-relaxed\">\n                      {feature.description}\n                    </p>\n                    <ul className=\"space-y-2\">\n                      {feature.details.map((detail, idx) => (\n                        <li key={idx} className=\"text-sm text-secondary-500 dark:text-secondary-500 flex items-center\">\n                          <svg className=\"w-4 h-4 text-primary-500 mr-2 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                          {detail}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Statistics Section */}\n      <section className=\"py-16 bg-gradient-to-r from-primary-600 to-accent-600 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold mb-4\">Trusted by Farmers Nationwide</h2>\n            <p className=\"text-primary-100\">Join thousands of farmers who are already transforming their agriculture</p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-10 text-center\">\n            <div className=\"animate-fade-in transform hover:scale-110 transition-all duration-300 p-6 rounded-2xl bg-white/10 backdrop-blur-sm hover:bg-white/20\">\n              <div className=\"text-6xl font-black mb-3 bg-gradient-to-r from-white to-primary-100 bg-clip-text text-transparent\">5,000+</div>\n              <div className=\"text-primary-100 font-semibold text-lg\">Active Farmers</div>\n            </div>\n            <div className=\"animate-fade-in transform hover:scale-110 transition-all duration-300 p-6 rounded-2xl bg-white/10 backdrop-blur-sm hover:bg-white/20\" style={{ animationDelay: '0.1s' }}>\n              <div className=\"text-6xl font-black mb-3 bg-gradient-to-r from-white to-primary-100 bg-clip-text text-transparent\">95%</div>\n              <div className=\"text-primary-100 font-semibold text-lg\">Prediction Accuracy</div>\n            </div>\n            <div className=\"animate-fade-in transform hover:scale-110 transition-all duration-300 p-6 rounded-2xl bg-white/10 backdrop-blur-sm hover:bg-white/20\" style={{ animationDelay: '0.2s' }}>\n              <div className=\"text-6xl font-black mb-3 bg-gradient-to-r from-white to-primary-100 bg-clip-text text-transparent\">28</div>\n              <div className=\"text-primary-100 font-semibold text-lg\">States Covered</div>\n            </div>\n            <div className=\"animate-fade-in transform hover:scale-110 transition-all duration-300 p-6 rounded-2xl bg-white/10 backdrop-blur-sm hover:bg-white/20\" style={{ animationDelay: '0.3s' }}>\n              <div className=\"text-6xl font-black mb-3 bg-gradient-to-r from-white to-primary-100 bg-clip-text text-transparent\">24/7</div>\n              <div className=\"text-primary-100 font-semibold text-lg\">Expert Support</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call-to-Action Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-accent-50 to-primary-50 dark:from-secondary-800 dark:to-secondary-900\">\n        <div className=\"max-w-4xl mx-auto text-center animate-fade-in\">\n          <h2 className=\"text-4xl font-bold text-secondary-900 dark:text-white mb-6\">\n            Ready to Transform Your Farming?\n          </h2>\n          <p className=\"text-xl text-secondary-600 dark:text-secondary-400 mb-8\">\n            Join thousands of farmers who are already using FasalNeeti to increase their yield \n            and make data-driven farming decisions.\n          </p>\n          <div className=\"flex justify-center\">\n            <Link\n              to=\"/farmer-login\"\n              className=\"btn-primary text-lg px-8 py-4\"\n            >\n              Get Started Today\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-secondary-900 text-white py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            \n            {/* Company Info */}\n            <div className=\"col-span-1 md:col-span-2\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-10 h-10 bg-gradient-to-br from-primary-600 to-accent-600 rounded-lg flex items-center justify-center\">\n                  <div className=\"w-6 h-6 bg-white rounded-sm flex items-center justify-center\">\n                    <div className=\"w-3 h-3 bg-primary-600 rounded-full\"></div>\n                  </div>\n                </div>\n                <h3 className=\"text-2xl font-bold\">FasalNeeti</h3>\n              </div>\n              <p className=\"text-secondary-400 mb-4 leading-relaxed\">\n                Empowering farmers with AI-driven agricultural insights for sustainable \n                and profitable farming practices.\n              </p>\n              <p className=\"text-sm text-secondary-500\">\n                ¬© 2024 FasalNeeti. All rights reserved.\n              </p>\n            </div>\n\n            {/* Quick Links */}\n            <div>\n              <h4 className=\"font-semibold mb-4\">Quick Links</h4>\n              <ul className=\"space-y-2\">\n                <li><Link to=\"/farmer-login\" className=\"text-secondary-400 hover:text-white transition-colors\">Farmer Portal</Link></li>\n                <li><Link to=\"/admin-login\" className=\"text-secondary-400 hover:text-white transition-colors\">Admin Portal</Link></li>\n              </ul>\n            </div>\n\n            {/* Support */}\n            <div>\n              <h4 className=\"font-semibold mb-4\">Support</h4>\n              <ul className=\"space-y-2\">\n                <li><a href=\"mailto:support@fasalneeti.com\" className=\"text-secondary-400 hover:text-white transition-colors\">Help Center</a></li>\n                <li><a href=\"mailto:contact@fasalneeti.com\" className=\"text-secondary-400 hover:text-white transition-colors\">Contact Us</a></li>\n                <li><a href=\"#\" className=\"text-secondary-400 hover:text-white transition-colors\">Documentation</a></li>\n                <li><a href=\"#\" className=\"text-secondary-400 hover:text-white transition-colors\">Community</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Homepage;\n","size_bytes":20893},"src/services/mongoService.js":{"content":"import axios from 'axios';\n\n/**\n * MongoDB Service for FasalNeeti\n * Handles all database operations for farmer data\n */\n\n// MongoDB Atlas connection string (replace with your actual connection string)\nconst MONGODB_URI = process.env.REACT_APP_MONGODB_URI || 'mongodb://localhost:27017/fasalneeti';\n\n// API base URL (for backend server)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nclass MongoService {\n  constructor() {\n    this.apiClient = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Add request interceptor for authentication\n    this.apiClient.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Add response interceptor for error handling\n    this.apiClient.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          localStorage.removeItem('authToken');\n          localStorage.removeItem('farmerData');\n          window.location.href = '/farmer-login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  /**\n   * Register a new farmer\n   * @param {Object} farmerData - Farmer registration data\n   * @returns {Promise<Object>} - Registration response\n   */\n  async registerFarmer(farmerData) {\n    try {\n      const response = await this.apiClient.post('/farmers/register', farmerData);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Farmer registered successfully'\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Registration failed',\n        message: 'Failed to register farmer'\n      };\n    }\n  }\n\n  /**\n   * Login farmer\n   * @param {Object} credentials - Login credentials\n   * @returns {Promise<Object>} - Login response\n   */\n  async loginFarmer(credentials) {\n    try {\n      const response = await this.apiClient.post('/farmers/login', credentials);\n      \n      if (response.data.token) {\n        localStorage.setItem('authToken', response.data.token);\n        localStorage.setItem('farmerData', JSON.stringify(response.data.farmer));\n      }\n      \n      return {\n        success: true,\n        data: response.data,\n        message: 'Login successful'\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Login failed',\n        message: 'Invalid credentials'\n      };\n    }\n  }\n\n  /**\n   * Get farmer profile\n   * @param {string} farmerId - Farmer ID\n   * @returns {Promise<Object>} - Farmer profile data\n   */\n  async getFarmerProfile(farmerId) {\n    try {\n      const response = await this.apiClient.get(`/farmers/${farmerId}`);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Profile fetched successfully'\n      };\n    } catch (error) {\n      console.error('Profile fetch error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Failed to fetch profile',\n        message: 'Could not load farmer profile'\n      };\n    }\n  }\n\n  /**\n   * Update farmer profile\n   * @param {string} farmerId - Farmer ID\n   * @param {Object} updateData - Data to update\n   * @returns {Promise<Object>} - Update response\n   */\n  async updateFarmerProfile(farmerId, updateData) {\n    try {\n      const response = await this.apiClient.put(`/farmers/${farmerId}`, updateData);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Profile updated successfully'\n      };\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Update failed',\n        message: 'Failed to update profile'\n      };\n    }\n  }\n\n  /**\n   * Get farmer dashboard data\n   * @param {string} farmerId - Farmer ID\n   * @returns {Promise<Object>} - Dashboard data\n   */\n  async getFarmerDashboard(farmerId) {\n    try {\n      const response = await this.apiClient.get(`/farmers/${farmerId}/dashboard`);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Dashboard data fetched successfully'\n      };\n    } catch (error) {\n      console.error('Dashboard fetch error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Failed to fetch dashboard data',\n        message: 'Could not load dashboard'\n      };\n    }\n  }\n\n  /**\n   * Save crop data\n   * @param {string} farmerId - Farmer ID\n   * @param {Object} cropData - Crop information\n   * @returns {Promise<Object>} - Save response\n   */\n  async saveCropData(farmerId, cropData) {\n    try {\n      const response = await this.apiClient.post(`/farmers/${farmerId}/crops`, cropData);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Crop data saved successfully'\n      };\n    } catch (error) {\n      console.error('Crop data save error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Failed to save crop data',\n        message: 'Could not save crop information'\n      };\n    }\n  }\n\n  /**\n   * Get weather data for farmer location\n   * @param {string} farmerId - Farmer ID\n   * @returns {Promise<Object>} - Weather data\n   */\n  async getWeatherData(farmerId) {\n    try {\n      const response = await this.apiClient.get(`/farmers/${farmerId}/weather`);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Weather data fetched successfully'\n      };\n    } catch (error) {\n      console.error('Weather fetch error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Failed to fetch weather data',\n        message: 'Could not load weather information'\n      };\n    }\n  }\n\n  /**\n   * Get yield predictions\n   * @param {string} farmerId - Farmer ID\n   * @returns {Promise<Object>} - Yield prediction data\n   */\n  async getYieldPredictions(farmerId) {\n    try {\n      const response = await this.apiClient.get(`/farmers/${farmerId}/predictions`);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Predictions fetched successfully'\n      };\n    } catch (error) {\n      console.error('Predictions fetch error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Failed to fetch predictions',\n        message: 'Could not load yield predictions'\n      };\n    }\n  }\n\n  /**\n   * Get all farmers (admin only)\n   * @returns {Promise<Object>} - List of farmers\n   */\n  async getAllFarmers() {\n    try {\n      const response = await this.apiClient.get('/admin/farmers');\n      return {\n        success: true,\n        data: response.data,\n        message: 'Farmers list fetched successfully'\n      };\n    } catch (error) {\n      console.error('Farmers fetch error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Failed to fetch farmers',\n        message: 'Could not load farmers list'\n      };\n    }\n  }\n\n  /**\n   * Delete farmer (admin only)\n   * @param {string} farmerId - Farmer ID to delete\n   * @returns {Promise<Object>} - Delete response\n   */\n  async deleteFarmer(farmerId) {\n    try {\n      const response = await this.apiClient.delete(`/admin/farmers/${farmerId}`);\n      return {\n        success: true,\n        data: response.data,\n        message: 'Farmer deleted successfully'\n      };\n    } catch (error) {\n      console.error('Farmer delete error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.message || 'Failed to delete farmer',\n        message: 'Could not delete farmer'\n      };\n    }\n  }\n\n  /**\n   * Fallback to localStorage when API is not available\n   */\n  getFallbackData() {\n    return {\n      farmerData: JSON.parse(localStorage.getItem('farmerData') || '{}'),\n      isOffline: true\n    };\n  }\n\n  /**\n   * Check if API is available\n   * @returns {Promise<boolean>} - API availability status\n   */\n  async checkApiHealth() {\n    try {\n      await this.apiClient.get('/health');\n      return true;\n    } catch (error) {\n      console.warn('API not available, using fallback data');\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nexport default new MongoService();\n","size_bytes":8696}},"version":1}